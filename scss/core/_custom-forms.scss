// Embedded icons from Open Iconic.
// Released under MIT and copyright 2014 Waybury.
// https://github.com/iconic/open-iconic

@if $enable-form {
    // Checkboxes and Radios
    // Base class takes care of all the key behavioral aspects.
    @if $enable-custom-control {
        .custom-control {
            position: relative;
            display: block;
            min-height: calc(1em * #{$line-height-base});
            padding-left: $custom-control-gutter;
        }

        .custom-control-inline {
            display: inline-flex;
            margin-right: $custom-control-inline-margin-x;
        }

        .custom-control-input {
            position: absolute;
            // Place input behind the label
            clip: rect(0, 0, 0, 0);
            pointer-events: none;
            opacity: 0;

            &:checked ~ .custom-control-indicator::before {
                color: $custom-control-checked-indicator-color;
                background-color: $custom-control-checked-indicator-bg;
                border-color: $custom-control-checked-indicator-border-color;
                @include box-shadow($custom-control-checked-indicator-box-shadow);
            }

            &:focus ~ .custom-control-indicator::before {
                box-shadow: $custom-control-focus-indicator-box-shadow;
            }

            &:active:not(:disabled) ~ .custom-control-indicator::before {
                color: $custom-control-active-indicator-color;
                background-color: $custom-control-active-indicator-bg;
            }

            &:disabled {
                ~ .custom-control-label {
                    color: $custom-control-disabled-description-color;
                }

                ~ .custom-control-indicator {
                    &::before {
                        opacity: $custom-control-disabled-indicator-opacity;
                    }
                }
            }
        }

        .custom-control-label {
            margin-bottom: 0; // Undo label margin
        }

        // Custom control indicators
        // Generate custom controls from pseudo-elements.
        .custom-control-indicator {
            position: absolute;
            width: $custom-control-indicator-size;
            height: $custom-control-indicator-size;
            //min-height: (1em * $line-height-base);
            margin-bottom: 0; // Undo label margin

            // Background (color and border)
            &::before {
                position: absolute;
                top: (($font-size-base * $line-height-base - $custom-control-indicator-size) / 2);
                left: -$custom-control-gutter;
                display: block;
                width: $custom-control-indicator-size;
                height: $custom-control-indicator-size;
                pointer-events: none;
                content: "";
                background-color: $custom-control-indicator-bg;
                border: $custom-control-indicator-border-width solid $custom-control-indicator-border-color;
                @include box-shadow($custom-control-indicator-box-shadow);
                @include transition($input-transition);
            }

            // Foreground (icon)
            &::after {
                position: absolute;
                top: (($font-size-base * $line-height-base - $custom-control-indicator-size) / 2);
                left: -$custom-control-gutter;
                display: block;
                width: $custom-control-indicator-size;
                height: $custom-control-indicator-size;
                content: "";
                background-repeat: no-repeat;
                background-position: center center;
                background-size: $custom-control-indicator-bg-size;
            }
        }


        // Checkboxes
        // Tweak just a few things for checkboxes.
        @if $enable-custom-checkbox {
            .custom-checkbox {
                .custom-control-indicator::before {
                    @include border-radius($custom-checkbox-radius);
                }

                .custom-control-input:checked ~ .custom-control-indicator {
                    &::after {
                        background-image: $custom-checkbox-checked-icon;
                    }
                }

                .custom-control-input:indeterminate ~ .custom-control-indicator {
                    &::before {
                        background-color: $custom-checkbox-indeterminate-bg;
                        @include box-shadow($custom-checkbox-indeterminate-box-shadow);
                    }
                    &::after {
                        background-image: $custom-checkbox-indeterminate-icon;
                    }
                }
            }
        }

        // Radios
        // Tweak just a few things for radios.
        @if $enable-custom-radio {
            .custom-radio {
                .custom-control-indicator::before {
                    // stylelint-disable-next-line property-blacklist
                    border-radius: $custom-radio-radius;
                }

                .custom-control-input:checked ~ .custom-control-indicator {
                    &::after {
                        background-image: $custom-radio-checked-icon;
                    }
                }
            }
        }

        // Switch
        @if $enable-custom-switch {
            .custom-switch {
                padding-left: $custom-switch-gutter;

                .custom-control-indicator {
                    width: $custom-switch-width;
                    height: $custom-switch-track-height;

                    &::before,
                    &::after {
                        //top: 50%;
                        left: -$custom-switch-gutter;
                        pointer-events: auto;
                        @include transition($switch-transition);
                        //transform: translateY(-50%);
                    }

                    // Thumb
                    &::before {
                        top: (($font-size-base * $line-height-base - $custom-switch-thumb-height) / 2);
                        z-index: 1; // Move above the track
                        width: $custom-switch-thumb-width;
                        height: $custom-switch-thumb-height;
                        background-color: $custom-switch-thumb-bg;
                        border: $custom-switch-thumb-border-width solid $custom-switch-thumb-border-color;
                        // stylelint-disable-next-line property-blacklist
                        border-radius: $custom-switch-thumb-radius;
                        @include box-shadow($custom-switch-thumb-box-shadow);
                    }

                    // Track
                    &::after {
                        top: (($font-size-base * $line-height-base - $custom-switch-track-height) / 2);
                        width: $custom-switch-width;
                        height: $custom-switch-track-height;
                        background-color: $custom-switch-track-bg;
                        border: $custom-switch-track-border-width solid $custom-switch-track-border-color;
                        // stylelint-disable-next-line property-blacklist
                        border-radius: $custom-switch-track-radius;
                        @include box-shadow($custom-switch-track-box-shadow);
                    }
                }

                .custom-control-input:checked ~ .custom-control-indicator {
                    &::before {
                        left: calc(#{$custom-switch-width} - #{$custom-switch-thumb-width} - #{$custom-switch-gutter});
                        background-color: $custom-switch-checked-thumb-bg;
                        border-color: $custom-switch-checked-thumb-border-color;
                        @include box-shadow($custom-switch-thumb-box-shadow);
                    }
                    &::after {
                        background-color: $custom-switch-checked-track-bg;
                        border-color: $custom-switch-checked-track-border-color;
                        @include box-shadow($custom-switch-track-box-shadow);
                    }
                }

                // Need to reset focus box-shadow because of overrule in `:checked` state
                .custom-control-input:focus ~ .custom-control-indicator::before {
                    box-shadow: $custom-control-focus-indicator-box-shadow;
                }

                .custom-control-input:active ~ .custom-control-indicator {
                    &::before {
                        background-color: $custom-switch-active-thumb-bg;
                    }
                    &::after {
                        background-color: $custom-switch-active-track-bg;
                    }
                }

                .custom-control-input:disabled ~ .custom-control-indicator {
                    &::before {
                        background-color: $custom-switch-disabled-thumb-bg;
                        border-color: $custom-switch-disabled-thumb-bg;
                        opacity: 1;
                    }
                    &::after {
                        opacity: $custom-control-disabled-indicator-opacity;
                    }
                }

                .custom-control-input:disabled:checked ~ .custom-control-indicator {
                    &::before {
                        background-color: $custom-switch-disabled-checked-thumb-bg;
                        border-color: $custom-switch-disabled-checked-thumb-bg;
                    }
                }
            }
        }
    }
}
