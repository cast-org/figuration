// scss-lint:disable ImportantRule, QualifyingElement, DuplicateProperty

// Reboot
//
// Global resets to common HTML elements and more for easier usage.
// Adds additional rules on top of Normalize.css, including several overrides.


// Reset the box-sizing
//
// Change from `box-sizing: content-box` to `border-box` so that when you add
// `padding` or `border`s to an element, the overall declared `width` does not
// change. For example, `width: 100px;` will always be `100px` despite the
// `border: 10px solid red;` and `padding: 20px;`.
//
// This reset may cause conflicts with some third-party widgets. For
// recommendations on resolving such conflicts, see
// http://figuration.org/get-started/quick-start/#box-sizing
//
// Credit: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/

html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}


// Make viewport responsive
//
// @viewport is needed because IE 10+ doesn't honor <meta name="viewport"> in
// some cases. See http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/.
// Eventually @viewport will replace <meta name="viewport">.
//
// However, `device-width` is broken on IE 10 on Windows (Phone) 8,
// and the fix for that involves a snippet of JavaScript to sniff the user agent
// and apply some conditional CSS.
//
// See:
// * http://timkadlec.com/2013/01/windows-phone-8-and-device-width/
// * http://figuration.org/get-started/browsers-devices/#internet-explorer-10-in-windows-phone-8
@at-root {
    @-ms-viewport { width: device-width; }
}


//
// Reset HTML, body, and more
//

html {
    // Sets a specific default `font-size` for user with `rem` type scales.
    font-size: $font-size-root;
    // As a side-effect of setting the @viewport above,
    // IE11 & Edge make the scrollbar overlap the content and automatically hide itself when not in use.
    // Unfortunately, the auto-showing of the scrollbar is sometimes too sensitive,
    // thus making it hard to click on stuff near the right edge of the page.
    // So we add this style to force IE11 & Edge to use a "normal", non-overlapping, non-auto-hiding scrollbar.
    -ms-overflow-style: scrollbar;
    // Changes the default tap highlight to be completely transparent in iOS.
    -webkit-tap-highlight-color: rgba(0,0,0,0);
}

body {
    // Remove the margin in all browsers
    margin: 0;
    // Make the `body` use the `font-size-root`
    font-family: $font-family-base;
    font-size: $font-size-base;
    font-weight: $font-weight-base;
    line-height: $line-height-base;
    // Go easy on the eyes and use something other than `#000` for text
    color: $body-color;
    // By default, `<body>` has no `background-color` so we set one as a best practice.
    background-color: $body-bg;
}

// Add the correct display in IE 10-
dialog {
    display: block;
}

// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
// Credit: https://github.com/suitcss/base
[tabindex="-1"]:focus {
    outline: none !important;
}


//
// Typography
//

// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
// margin for easier control within type scales as it avoids margin collapsing.
h1, h2, h3, h4, h5, h6 {
    margin-top: 0;
    margin-bottom: .5rem;
}

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
    margin-top: 0;
    margin-bottom: 1rem;
}

// Abbreviations
abbr[title],
// Add data-* attribute to help out our tooltip widget
abbr[data-cfw-tooltip-original-title],
abbr[data-cfw-popover-original-title] {
    text-decoration: none;
    cursor: help;
    border-bottom: 1px dotted $abbr-border-color;
}

address {
    margin-bottom: 1rem;
    font-style: normal;
    line-height: inherit;
}

ol,
ul,
dl {
    margin-top: 0;
    margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
    margin-bottom: 0;
}

dt {
    font-weight: $dt-font-weight;
}

dd {
    margin-bottom: .5rem;
    margin-left: 0; // Undo browser default
}

blockquote {
    margin: 0 0 1rem;
}


//
// Links
//

a {
    color: $link-color;
    text-decoration: $link-decoration;

    @include hover {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
    }
}

// And undo these styles for placeholder links/named anchors (without href)
// which have not been made explicitily keyboard-focusable (without tabindex).
// It would be more straightforward to just use a[href] in previous block, but that
// causes specificity issues in many other styles that are too complex to fix.

a:not([href]):not([tabindex]) {
    color: inherit;
    text-decoration: none;

    @include hover-focus {
        color: inherit;
        text-decoration: none;
    }

    &:focus {
        outline: 0;
    }
}


//
// Code
//

pre {
    // Remove browser default top margin
    margin-top: 0;
    // Reset browser default of `1em` to use `rem`s
    margin-bottom: 1rem;
    // Normalize v4 removed this property, causing `<pre>` content to break out of wrapping code snippets
    overflow: auto;
}


//
// Figures
//

figure {
    // Normalize adds `margin` to `figure`s as browsers apply it inconsistently.
    // We reset that to create a better flow in-page.
    margin: 0 0 1rem;
}


//
// Images
//

img {
    vertical-align: middle;
}


// Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
//
// In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
// DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
// However, they DO support removing the click delay via `touch-action: manipulation`.
// See:
// * http://figuration.org/content/reboot/#click-delay-optimization-for-touch
// * http://caniuse.com/#feat=css-touch-action
// * http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay

a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
    touch-action: manipulation;
}


//
// Tables
//

table {
    border-collapse: collapse;
    // Reset for nesting within parents with `background-color`.
    background-color: $table-bg;

}

caption {
    padding-top: $table-cell-padding;
    padding-bottom: $table-cell-padding;
    color: $text-muted;
    text-align: left;
    caption-side: bottom;
}

th {
    // Centered by default, but left-align-ed to match the `td`s below.
    text-align: left;
}


//
// Forms
//

label {
    // Allow labels to use `margin` for spacing.
    display: inline-block;
    margin-bottom: .5rem;
}

// Work around a Firefox/IE bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
//
// Credit: https://github.com/suitcss/base/
button:focus {
    outline: 1px dotted;
    outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
optgroup,
select,
textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    // iOS adds rounded borders by default
    border-radius: 0;
}
// scss-lint:disable VendorPrefix
[type="checkbox"] {
    -webkit-border-radius: 5px;
    -webkit-appearance: checkbox;

}
[type="radio"] {
    -webkit-border-radius: 8px;
    -webkit-appearance: radio;
}
// scss-lint:enable VendorPrefix

input[type="radio"],
input[type="checkbox"] {
    // Apply a disabled cursor for radios and checkboxes.
    // Note: Neither radios nor checkboxes can be readonly.
    &:disabled {
        cursor: $cursor-disabled;
    }
}

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
    // Remove the default appearance of temporal inputs to avoid a Mobile Safari
    // bug where setting a custom line-height prevents text from being vertically
    // centered within the input.
    // See https://bugs.webkit.org/show_bug.cgi?id=139848
    -webkit-appearance: listbox;
}

textarea {
    // Textareas should really only resize vertically so they don't break their (horizontal) containers.
    resize: vertical;
}

fieldset {
    // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
    // so we reset that to ensure it behaves more like a standard block element.
    //See https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
    min-width: 0;
    // Reset the default outline behavior of fieldsets so they don't affect page layout.
    padding: 0;
    margin: 0;
    border: 0;
}

legend {
    // Reset the entire legend element to match the `fieldset`
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: .5rem;
    font-size: 1.5rem;
    line-height: 1;
    //  border: 0;
}

legend label {
    // Make labels consistent even when they are inside a `legend`
    position: relative;
    top: -.25rem;
    margin-bottom: -.25rem;
    font-size: 1rem;
    line-height: $line-height-base;
}

input[type="search"] {
    // This overrides the extra rounded corners on search inputs in iOS so that our
    // `.form-control` class can properly style them. Note that this cannot simply
    // be added to `.form-control` as it's not specific enough.
    -webkit-appearance: none;
}

// todo: needed?
output {
    display: inline-block;
    // font-size: $font-size-base;
    // line-height: $line-height-base;
    // color: $input-color;
}

// Always hide an element with the `hidden` HTML attribute (from PureCSS).
[hidden] {
    display: none !important;
}
