// stylelint-disable selector-no-qualifying-type
@use "sass:map";
@use "../settings";
@use "../settings-options";
@use "../functions/calc-util";
@use "../mixins/border";
@use "../mixins/box-shadow";
@use "../mixins/forms";
@use "../mixins/transition";
@use "../vendor/rfs";

@if settings-options.$enable-form {
  // Textual form controls
  @if settings-options.$enable-form-control {
    .form-control {
      display: block;
      width: 100%;
      height: forms.calc-input-height-outer(settings.$input-padding-y, settings.$input-line-height);
      padding: settings.$input-padding-y settings.$input-padding-x;
      font-family: settings.$input-font-family;
      @include rfs.font-size(settings.$input-font-size);
      font-weight: settings.$input-font-weight;
      line-height: settings.$input-line-height;
      color: settings.$input-color;
      appearance: none; // Fix appearance for date inputs in Safari
      background-color: settings.$input-bg;
      border: settings.$input-border-width solid settings.$input-border-color;

      // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
      // Provide a fallback to override to the iOS default
      @include border.border-radius(settings.$input-border-radius, 0);

      @include box-shadow.box-shadow(settings.$input-box-shadow);
      @include transition.transition(settings.$input-transition);

      // Unstyle the caret on `<select>`s in IE10+.
      &::-ms-expand {
        background-color: transparent;
        border: 0;
      }

      &::-webkit-date-and-time-value {
        // Android/iOS - form-control's "width: 100%" makes the input width too small
        // iOS Safari, form-control's "appearance: none" + "width: 100%" makes the input width too small
        min-width: 10ch;

        // Android Chrome - Fix value alignment issue
        // Due to browser default margin in shadow DOM
        margin: 0;
      }

      // Customize the `:focus` state to imitate native WebKit styles.
      @include forms.form-control-focus();

      // Placeholder
      &::placeholder {
        color: settings.$input-placeholder-color;
        // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
        opacity: 1;
      }

      // Disabled and read-only inputs
      //
      // HTML5 says that controls under a fieldset > legend:first-child won't be
      // disabled if the fieldset is disabled. Due to implementation difficulty, we
      // don't honor that edge case; we style them as disabled anyway.
      &:disabled {
        color: settings.$input-disabled-color;
        background-color: settings.$input-disabled-bg;
        border-color: settings.$input-disabled-border-color;
        opacity: settings.$input-disabled-opacity;
      }
    }

    select.form-control {
      padding-right: calc-util.add(settings.$input-padding-x, calc-util.add(settings.$form-select-indicator-width, settings.$form-select-indicator-offset, false));
      background-color: settings.$input-bg;
      background-image: settings.$form-select-indicator-image;
      background-repeat: no-repeat;
      background-position: settings.$form-select-indicator-position;
      background-size: settings.$form-select-indicator-width settings.$form-select-indicator-height;

      &:disabled {
        pointer-events: none;
      }

      &[size]:not([size="1"]),
      &[multiple] {
        height: auto;
        padding-right: settings.$input-padding-x;
        background-image: none;
      }

      &:focus::-ms-value {
        // Suppress the nested default white text on blue background highlight given to
        // the selected option text when the (still closed) <select> receives focus
        // in IE and (under certain conditions) Edge, as it cannot be made to
        // match the appearance of the native widget.
        // See https://github.com/twbs/bootstrap/issues/19398.
        color: settings.$input-focus-color;
        background-color: settings.$input-focus-bg;
      }

      // Hide the default caret in IE11
      &::-ms-expand {
        display: none;
      }

      // Remove outline from select box in FF
      &:-moz-focusring {
        color: transparent;
        text-shadow: 0 0 0 settings.$input-color;
      }
    }

    textarea.form-control {
      min-height: forms.calc-input-height-outer(settings.$input-padding-y, settings.$input-line-height);

      &:not([rows="1"]) {
        height: auto;
      }
    }
  }

  // Static form control text
  // Reset some styling to make the input look like normal text again,
  // but keep the vertical aligning properties.
  @if settings-options.$enable-form-control-static {
    .form-control-static {
      display: block;
      width: 100%;
      padding: settings.$input-padding-y 0;
      margin-bottom: 0;
      @include rfs.font-size(settings.$input-font-size);
      line-height: settings.$input-line-height;
      color: settings.$input-static-color;
      background-color: transparent;
      border: solid transparent;
      border-width: settings.$input-border-width 0;
    }
  }

  // Form control sizing
  // Build on `.form-control` with modifier classes to decrease or increase the
  // height and font-size of form controls.
  @if settings.$enable-sizing {
    @each $size, $dims in settings.$input-sizes {
      $sz-font-size:     map.get($dims, "font-size");
      $sz-line-height:   map.get($dims, "line-height");
      $sz-padding-y:     map.get($dims, "padding-y");
      $sz-padding-x:     map.get($dims, "padding-x");
      $sz-border-radius: map.get($dims, "border-radius");

      %form-control-#{$size} {
        height: forms.calc-input-height-outer($sz-padding-y, $sz-line-height);
        @if $sz-padding-y != null and $sz-padding-x != null {
          $my-padding-y: if($sz-padding-y != null, $sz-padding-y, $input-padding-y);
          $my-padding-x: if($sz-padding-x != null, $sz-padding-x, $input-padding-x);
          padding: $my-padding-y $my-padding-x;
        }
        @include rfs.font-size($sz-font-size);
        line-height: $sz-line-height;
        @include border.border-radius($sz-border-radius);
      }

      @if $sz-padding-y != null and $sz-line-height != null {
        $my-padding-y: if($sz-padding-y != null, $sz-padding-y, $input-padding-y);
        textarea.form-control {
          min-height: forms.calc-input-height-outer($my-padding-y, $sz-line-height);
        }
      }

      @if settings-options.$enable-form-control and settings-options.$enable-form-control-sizing {
        .form-control-#{$size} {
          @extend %form-control-#{$size};
        }

        // Adjust right padding for select items due to indicator
        @if $sz-padding-x != null {
          select.form-control-#{$size} {
            padding-right: calc-util.add($sz-padding-x, calc-util.add($form-select-indicator-width, $form-select-indicator-offset, false));
          }
        }
      }
    }
  }

  @if settings-options.$enable-form-text {
    .form-text {
      display: block;
      margin-top: settings.$form-text-margin-top;
      @include rfs.font-size(settings.$form-text-font-size);
      font-style: settings.$form-text-font-style;
      font-weight: settings.$form-text-font-weight;
      line-height: settings.$form-text-line-height;
      color: settings.$form-text-color;
    }
  }
}
