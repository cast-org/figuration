@use "sass:map";
@use "../settings" as *;
@use "../settings-options" as *;
@use "../functions" as *;
@use "../mixins" as *;
@use "../vendor/rfs" as *;

// File input
@if $enable-form and $enable-form-file {
  .form-file {
    position: relative;
    @include font-size($input-font-size);
    line-height: $input-line-height;
  }

  .form-file-input {
    position: relative;
    z-index: 2;
    width: 100%;
    height: calc-input-height-outer($input-padding-y, $input-line-height);
    margin: 0;
    opacity: 0;

    // Separate rules for :focus and :focus-within
    // IE doesn't support :focus-within and will ignore ruleset otherwise
    &:focus {
      ~ .form-file-label {
        color: $input-focus-color;
        background-color: $input-focus-bg;
        border-color: $input-focus-border-color;
        outline: 0;

        @if $enable-shadows {
          @include box-shadow($input-box-shadow, $input-focus-box-shadow);
        } @else {
          // Avoid using mixin so we can pass custom focus shadow properly
          box-shadow: $input-focus-box-shadow;
        }
      }
    }

    &:focus-within {
      ~ .form-file-label {
        color: $input-focus-color;
        background-color: $input-focus-bg;
        border-color: $input-focus-border-color;
        outline: 0;
        @if $enable-shadows {
          @include box-shadow($input-box-shadow, $input-focus-box-shadow);
        } @else {
          // Avoid using mixin so we can pass custom focus shadow properly
          box-shadow: $input-focus-box-shadow;
        }
      }
    }

    &:hover:not([disabled]):not(:disabled):not([readonly]) {
      ~ .form-file-label {
        .form-file-button {
          color: $form-file-button-hover-color;
          background-color: $form-file-button-hover-bg;
        }
      }
    }

    &[disabled],
    &:disabled {
      & ~ .form-file-label {
        color: $input-disabled-color;
        background-color: $input-disabled-bg;

        .form-file-button {
          color: $form-file-button-disabled-color;
          background-color: $form-file-button-disabled-bg;
          opacity: $form-file-button-disabled-opacity;
        }
      }
    }
  }

  .form-file-label {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    z-index: 1;
    display: flex;
    height: calc-input-height-outer($input-padding-y, $input-line-height);
    color: $input-color;
    background-color: $input-bg;
    border-color: $input-border-color;
    @include border-radius($input-border-radius);
    @include box-shadow($input-box-shadow);
    @include transition($input-transition);
  }

  .form-file-text {
    display: block;
    flex-grow: 1;
    padding: $input-padding-y $input-padding-x;
    overflow: hidden;
    font-family: $input-font-family;
    font-weight: $input-font-weight;
    text-overflow: ellipsis;
    white-space: nowrap;
    border: $input-border-width solid;
    border-color: inherit;
    @include border-start-radius(inherit);
  }

  .form-file-button {
    display: block;
    flex-shrink: 0;
    padding: $input-padding-y $input-padding-x;
    margin-left: -$input-border-width;
    font-family: $form-file-button-font-family;
    font-weight: $form-file-button-font-weight;
    color: $form-file-button-color;
    background-color: $form-file-button-bg;
    border: $input-border-width solid;
    border-color: inherit;
    @include border-end-radius(inherit);
  }

  // Sizing
  @if $enable-sizing {
    @each $size, $dims in $input-sizes {
      $sz-font-size:     map.get($dims, "font-size");
      $sz-line-height:   map.get($dims, "line-height");
      $sz-padding-y:     map.get($dims, "padding-y");
      $sz-padding-x:     map.get($dims, "padding-x");
      $sz-border-radius: map.get($dims, "border-radius");

      %form-file-#{$size} {
        @include font-size($sz-font-size);
        line-height: $sz-line-height;

        .form-file-input,
        .form-file-label {
          height: calc-input-height-outer($sz-padding-y, $sz-line-height);
        }

        .form-file-label {
          @include border-radius($sz-border-radius);
        }

        .form-file-text,
        .form-file-button {
          @if $sz-padding-y != null and $sz-padding-x != null {
            $my-padding-y: if($sz-padding-y != null, $sz-padding-y, $input-padding-y);
            $my-padding-x: if($sz-padding-x != null, $sz-padding-x, $input-padding-x);
            padding: $my-padding-y $my-padding-x;
          }
        }
      }

      @if $enable-form-file-sizing {
        .form-file-#{$size} {
          @extend %form-file-#{$size};
        }
      }
    }
  }
}
