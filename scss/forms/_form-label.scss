@use "sass:map";
@use "../functions/math";
@use "../mixins/font-size";
@use "../settings";
@use "../settings-options";

// Form label

// For use with horizontal and inline forms, when you need the label
// (or legend) text to align with the form controls.
@if settings-options.$enable-form and settings-options.$enable-form-label {
    .form-label {
        padding-top: math.add(settings.$input-padding-y, settings.$input-border-width);
        padding-bottom: math.add(settings.$input-padding-y, settings.$input-border-width);
        margin-bottom: 0; // Override the `<label>/<legend>` default
        @include font-size.font-size(inherit); // Override the `<legend>` default
        font-weight: settings.$form-label-font-weight;
        line-height: settings.$input-line-height;
    }

    // Form label sizing
    // Build on `.form-label` with modifier classes to decrease or increase the
    // height and font-size of form labels.
    @if settings-options.$enable-sizing {
        @each $size, $dims in settings.$input-sizes {
            $sz-font-size:     map.get($dims, "font-size");
            $sz-line-height:   map.get($dims, "line-height");
            $sz-padding-y:     map.get($dims, "padding-y");

            %form-label-#{$size} {
                @if $sz-padding-y != null {
                    padding-top: math.add($sz-padding-y, settings.$input-border-width);
                    padding-bottom: math.add($sz-padding-y, settings.$input-border-width);
                }
                @include font-size.font-size($sz-font-size);
                line-height: $sz-line-height;
            }

            @if settings-options.$enable-form-label and settings-options.$enable-form-label-sizing {
                .form-label-#{$size} {
                    @extend %form-label-#{$size};
                }
            }
        }
    }
}
