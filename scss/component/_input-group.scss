// Base styles
.input-group {
    position: relative;
    width: 100%;

    @if $enable-flex-full {
        display: flex;
    } @else {
        display: table;
        // Prevent input groups from inheriting border styles from table cells when
        // placed within a table.
        border-collapse: separate;
    }

    .form-control {
        // Ensure that the input is always above the *appended* addon button for
        // proper border colors.
        position: relative;
        z-index: 2;
        // Bring the "active" form control to the front
        @include hover-focus-active {
            z-index: 3;
        }

        @if $enable-flex-full {
            flex: 1;
        } @else {
            // IE9 fubars the placeholder attribute in text inputs and the arrows on
            // select elements in input groups. To fix it, we float the input. Details:
            // https://github.com/twbs/bootstrap/issues/11561#issuecomment-28936855
            float: left;
            width: 100%;
        }

        margin-bottom: 0;
    }
}

@if $enable-flex-opt {
    .input-group-flex {
        display: flex;
        border-collapse: initial;

        .form-control {
            flex: 1;
            float: initial;
        }
    }
}

.input-group-addon,
.input-group-btn,
.input-group .form-control {
    @if $enable-flex-full {
        // Vertically centers the content of the addons within the input group
        display: flex;
        flex-direction: column;
        justify-content: center;
    } @else {
        display: table-cell;
    }
    &:not(:first-child):not(:last-child) {
        @include border-radius(0);
    }
}
@if $enable-flex-opt {
    .input-group-flex {
        .input-group-addon,
        .input-group-btn,
        .form-control {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }
    }
}

.input-group-addon,
.input-group-btn {
    @if not $enable-flex-full {
        width: 1%;
    }
    white-space: nowrap;
    vertical-align: middle; // Match the inputs
}
@if $enable-flex-opt {
    .input-group-flex {
        .input-group-addon,
        .input-group-btn {
            width: auto;
        }
    }
}

// Sizing options
// Remix the default form control sizing classes into new ones for easier manipulation.
@if $enable-sizing {
    @each $size, $dims in $component-sizes {
        .input-group-#{$size} > .form-control,
        .input-group-#{$size} > .input-group-addon,
        .input-group-#{$size} > .input-group-btn > .btn {
            @extend .form-control-#{$size};
        }
    }
}

// Text input groups
.input-group-addon {
    padding: $input-padding-y $input-padding-x;
    margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
    font-size: $font-size-base;
    font-weight: $font-weight-normal;
    line-height: $input-line-height;
    color: $input-color;
    text-align: center;
    background-color: $input-group-addon-bg;
    border: $input-border-width solid $input-group-addon-border-color;
    @include border-radius($border-radius);

    // Sizing
    @if $enable-sizing {
        @each $size, $dims in $component-sizes {
            $sz-font-size:     map-get($dims, "font-size");
            $sz-padding-y:     map-get($dims, "padding-y") - ($input-line-height-delta * $sz-font-size / 2);
            $sz-padding-x:     map-get($dims, "padding-x");
            $sz-border-radius: map-get($dims, "border-radius");

            &.form-control-#{$size} {
                padding: $sz-padding-y $sz-padding-x;
                font-size: $sz-font-size;
                @include border-radius($sz-border-radius);
            }
        }
    }

    // scss-lint:disable QualifyingElement
    // Nuke default margins from checkboxes and radios to vertically center within.
    input[type="radio"],
    input[type="checkbox"] {
        margin-top: 0;
    }
    // scss-lint:enable QualifyingElement
}


// Reset rounded corners
.input-group .form-control:not(:last-child),
.input-group-addon:not(:last-child),
.input-group-btn:not(:last-child) > .btn,
.input-group-btn:not(:last-child) > .btn-group > .btn,
.input-group-btn:not(:last-child) > .dropdown-toggle,
.input-group-btn:not(:first-child) > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:not(:first-child) > .btn-group:not(:last-child) > .btn {
    @include border-right-radius(0);
}
.input-group-addon:not(:last-child) {
    border-right: 0;
}
.input-group .form-control:not(:first-child),
.input-group-addon:not(:first-child),
.input-group-btn:not(:first-child) > .btn,
.input-group-btn:not(:first-child) > .btn-group > .btn,
.input-group-btn:not(:first-child) > .dropdown-toggle,
.input-group-btn:not(:last-child) > .btn:not(:first-child),
.input-group-btn:not(:last-child) > .btn-group:not(:first-child) > .btn {
    @include border-left-radius(0);
}
.form-control + .input-group-addon:not(:first-child) {
    border-left: 0;
}

// Button input groups
.input-group-btn {
    position: relative;
    // Jankily prevent input button groups from wrapping with `white-space` and
    // `font-size` in combination with `inline-block` on buttons.
    font-size: 0;
    white-space: nowrap;

    // Negative margin for spacing, position for bringing hovered/focused/actived
    // element above the siblings.
    > .btn {
        position: relative;

        @if $enable-flex-full {
            // Vertically stretch the button and center its content
            flex: 1;
        }

        + .btn {
            margin-left: (-$input-border-width);
        }

        // Bring the "active" button to the front
        @include hover-focus-active {
            z-index: 3;
        }
    }

    // Negative margin to only have a single, shared border between the two
    &:not(:last-child) {
        > .btn,
        > .btn-group {
            margin-right: (-$input-border-width);
        }
    }
    &:not(:first-child) {
        > .btn,
        > .btn-group {
            z-index: 2;
            margin-left: (-$input-border-width);
            // Because specificity
            @include hover-focus-active {
                z-index: 3;
            }
        }
    }
}

@if $enable-flex-opt {
    .input-group-flex {
        .input-group-btn {
            > .btn {
                // Vertically stretch the button and center its content
                flex: 1;
            }
        }
    }
}
