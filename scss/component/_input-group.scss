// Base styles
.input-group {
    position: relative;
    display: flex;
    align-items: stretch;
    width: 100%;

    > .form-control,
    > .custom-select,
    > .custom-file {
        // Ensure that the input is always above the *appended* addon button for
        // proper border colors.
        position: relative;
        z-index: 1;
        flex: 1 1 auto;
        width: 1%;
        // Size form input to input group height
        height: auto;
        margin-bottom: 0;

        + .form-control,
        + .custom-select {
            margin-left: -$input-border-width;
        }

        // Bring the "active" form control to the front
        @include hover-focus-active {
            z-index: 2;
        }
    }
}

.input-group-addon,
.input-group-btn,
.input-group > .form-control,
.input-group > .custom-select,
.input-group > .custom-file-control {
    display: flex;
    align-items: center;

    &:not(:first-child):not(:last-child) {
        @include border-radius(0);
    }
}

.input-group-addon,
.input-group-btn {
    white-space: nowrap;
}

.input-group > .custom-file {
    display: flex;
    align-items: center;
}

// Text input groups
.input-group-addon {
    padding: $input-padding-y $input-padding-x;
    margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
    font-size: $font-size-base;
    font-weight: $font-weight-normal;
    line-height: $input-line-height;
    color: $input-group-addon-color;
    text-align: center;
    background-color: $input-group-addon-bg;
    background-clip: padding-box;
    border: $input-border-width solid $input-group-addon-border-color;
    @include border-radius($border-radius);

    // Nuke default margins from checkboxes and radios to vertically center within.
    // stylelint-disable selector-no-qualifying-type
    input[type="radio"],
    input[type="checkbox"] {
        margin-top: 0;
    }
    // stylelint-enable selector-no-qualifying-type
}

.has-sucess,
.has-warning,
.has-danger {
    .input-group-btn {
        &:not(:first-child) {
            > .btn,
            > .btn-group {
                z-index: 1;
            }
        }
    }
}

// Button input groups
.input-group-btn {
    position: relative;
    align-items: stretch;
    // Jankily prevent input button groups from wrapping with `white-space` and
    // `font-size` in combination with `inline-block` on buttons.
    font-size: 0;
    white-space: nowrap;

    // Negative margin for spacing, position for bringing hovered/focused/actived
    // element above the siblings.
    > .btn {
        position: relative;
        // Vertically stretch the button and center its content
        align-self: stretch;
        background-clip: padding-box;

        + .btn {
            margin-left: (-$input-border-width);
        }

        // Bring the "active" button to the front
        @include hover-focus-active {
            z-index: 2;
        }
    }

    &:first-child > .btn + .btn {
        margin-left: 0;
    }

    // Negative margin to only have a single, shared border between the two
    &:not(:last-child) {
        > .btn,
        > .btn-group {
            margin-right: (-$input-border-width);
        }
    }
    &:not(:first-child) {
        > .btn,
        > .btn-group {
            z-index: 1;
            margin-left: (-$input-border-width);
            // Because specificity
            @include hover-focus-active {
                z-index: 2;
            }
        }
    }

    + .input-group-btn {
        > .btn,
        > .btn-group {
            margin-left: 0;
        }
    }
}

// Sizing options
// Remix the default form control sizing classes into new ones for easier manipulation.
@if $enable-sizing {
    @each $size, $dims in $component-sizes {
        $sz-padding-x:     map-get($dims, "padding-x");

        .input-group-#{$size} > .form-control,
        .input-group-#{$size} > .custom-select,
        .input-group-#{$size} > .input-group-addon,
        .input-group-#{$size} > .input-group-btn > .btn {
            @extend %form-control-#{$size};
        }
        .input-group-#{$size} > .input-group-addon,
        .input-group-#{$size} > .input-group-btn > .btn {
            padding-right: $sz-padding-x;
            padding-left: $sz-padding-x;
        }
    }
}


// Reset rounded corners
.input-group > .form-control:not(:last-child),
.input-group > .custom-select:not(:last-child),
.input-group > .custom-file:not(:last-child) .custom-file-control,
.input-group-addon:not(:last-child),
.input-group-btn:not(:last-child) > .btn,
.input-group-btn:not(:last-child) > .btn-group > .btn,
.input-group-btn:not(:last-child) > .dropdown-toggle,
.input-group-btn:not(:first-child) > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:not(:first-child) > .btn-group:not(:last-child) > .btn {
    @include border-end-radius(0);
}

.input-group-addon:not(:last-child) {
    border-right: 0;
}

.input-group > .form-control:not(:first-child),
.input-group > .custom-select:not(:first-child),
.input-group > .custom-file:not(:first-child) .custom-file-control,
.input-group-addon:not(:first-child),
.input-group-btn:not(:first-child) > .btn,
.input-group-btn:not(:first-child) > .btn-group > .btn,
.input-group-btn:not(:first-child) > .dropdown-toggle,
.input-group-btn:not(:last-child) > .btn:not(:first-child),
.input-group-btn:not(:last-child) > .btn-group:not(:first-child) > .btn {
    @include border-start-radius(0);
}

.form-control,
.custom-select,
.custom-file {
    + .input-group-addon:not(:first-child) {
        border-left: 0;
    }
}
