// stylelint-disable selector-no-qualifying-type

// Base styles
.input-group {
    position: relative;
    display: flex;
    flex-wrap: wrap; // For form validation feedback
    align-items: stretch;
    width: 100%;

    > .form-control,
    > .custom-select,
    > .custom-file {
        position: relative;  // Needed for z-index on focus/active state
        flex: 1 1 auto;
        width: 1%;
        margin-bottom: 0;

        + .form-control,
        + .custom-select,
        + .custom-file {
            margin-left: -$input-border-width;
        }
    }

    // Bring the "active" form control to the top of surrounding elements
    > .form-control:focus,
    > .custom-select:focus,
    > .custom-file .custom-file-input:focus ~ .custom-file-label {
        z-index: 3;
    }

    > .form-control,
    > .custom-select {
        &:not(:first-child) { @include border-start-radius(0); }
        &:not(:last-child) { @include border-end-radius(0); }
    }

    // Custom file inputs have more complex markup,
    // needing special overrides.
    > .custom-file {
        display: flex;
        align-items: center;

        &:not(:last-child) .custom-file-label,
        &:not(:last-child) .custom-file-label::after { @include border-end-radius(0); }
        &:not(:first-child) .custom-file-label { @include border-start-radius(0); }
    }
}

// Addon
// While it requires one extra layer of HTML for each, dedicated addon element allows for:
// 1) be less clever
// 2) simplify our selectors
// 3) support HTML5 form validation
.input-group-addon {
    display: flex;
    margin-left: -$input-border-width;

    // Ensure buttons are always above inputs for more visually pleasing borders.
    // This isn't needed for `.input-group-text` since it shares the same border-color
    // as our inputs.
    .btn {
        position: relative;
        z-index: 2;
    }

    .btn + .btn,
    .btn + .input-group-text,
    .input-group-text + .input-group-text,
    .input-group-text + .btn {
        margin-left: -$input-border-width;
    }
}

// Textual addon item
// Catch-all element for any text or radio/checkbox input you wish
// to addon to an input.
.input-group-text {
    display: flex;
    align-items: center;
    padding: $input-padding-y $input-padding-x;
    margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
    @include font-size($font-size-base); // Match inputs
    font-weight: $font-weight-normal;
    line-height: $input-line-height;
    color: $input-group-addon-color;
    text-align: center;
    white-space: nowrap;
    background-color: $input-group-addon-bg;
    border: $input-border-width solid $input-group-addon-border-color;
    @include border-radius($input-border-radius);

    // Nuke default margins from checkboxes and radios to vertically center within.
    input[type="radio"],
    input[type="checkbox"] {
        margin-top: 0;
    }
}

// Sizing options
// Remix the default form control sizing classes into new ones for easier manipulation.
@if $enable-sizing {
    @each $size, $dims in $input-sizes {
        $sz-padding-x:     map-get($dims, "padding-x");

        .input-group-#{$size} > .form-control,
        .input-group-#{$size} > .custom-select,
        .input-group-#{$size} > .input-group-addon,
        .input-group-#{$size} > .input-group-btn > .btn {
            @extend %form-control-#{$size};
        }
        .input-group-#{$size} > .input-group-addon,
        .input-group-#{$size} > .input-group-btn > .btn {
            padding-right: $sz-padding-x;
            padding-left: $sz-padding-x;
        }
    }
}


// Reset rounded corners
.input-group > .form-control:not(:last-child),
.input-group > .custom-select:not(:last-child),
.input-group > .custom-file:not(:last-child) .custom-file-control,
.input-group-addon:not(:last-child),
.input-group-btn:not(:last-child) > .btn,
.input-group-btn:not(:last-child) > .btn-group > .btn,
.input-group-btn:not(:last-child) > .dropdown-toggle,
.input-group-btn:not(:first-child) > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:not(:first-child) > .btn-group:not(:last-child) > .btn {
    @include border-end-radius(0);
}

.input-group-addon:not(:last-child) {
    border-right: 0;
}

.input-group > .form-control:not(:first-child),
.input-group > .custom-select:not(:first-child),
.input-group > .custom-file:not(:first-child) .custom-file-control,
.input-group-addon:not(:first-child),
.input-group-btn:not(:first-child) > .btn,
.input-group-btn:not(:first-child) > .btn-group > .btn,
.input-group-btn:not(:first-child) > .dropdown-toggle,
.input-group-btn:not(:last-child) > .btn:not(:first-child),
.input-group-btn:not(:last-child) > .btn-group:not(:first-child) > .btn {
    @include border-start-radius(0);
}

.form-control,
.custom-select,
.custom-file {
    + .input-group-addon:not(:first-child) {
        border-left: 0;
    }
}
