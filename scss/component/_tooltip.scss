@use "../functions/math";
@use "../mixins/border";
@use "../mixins/font-size";
@use "../mixins/hover";
@use "../mixins/reset-text";
@use "../settings";
@use "../settings-options";

@if settings-options.$enable-tooltip {
    .tooltip {
        position: absolute;
        z-index: settings.$zindex-tooltip;
        display: none;
        margin: settings.$tooltip-margin;
        // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
        // So reset our font and text properties to avoid inheriting weird values.
        @include reset-text.reset-text();
        @include font-size.font-size(settings.$tooltip-font-size);
        // Allow breaking very long words so they don't overflow the tooltip's bounds
        word-wrap: break-word;
        outline: 0;
        opacity: 0;

        // Showing
        &.in {
            opacity: settings.$tooltip-opacity;
        }

        // Close
        @if settings-options.$enable-tooltip-close {
            .close {
                position: static;
                float: right;
                padding: settings.$tooltip-close-padding-y settings.$tooltip-close-padding-x;
                color: settings.$tooltip-close-color;
                @include font-size.font-size(1.25rem);
                text-shadow: none;
                opacity: settings.$tooltip-close-opacity;

                &:not(:disabled):not(.disabled) {
                    @include hover.hover-focus() {
                        color: settings.$tooltip-close-hover-color;
                        opacity: settings.$tooltip-close-hover-opacity;
                    }
                }
            }
        }
    }

    // Arrow base
    @if settings-options.$enable-tooltip-arrow {
        .tooltip-arrow {
            position: absolute;
            display: block;
            width: settings.$tooltip-arrow-width;
            height: settings.$tooltip-arrow-height;

            &::before {
                position: absolute;
                content: "";
                border-color: transparent;
                border-style: solid;
            }
        }

        /* rtl:begin:ignore */

        // Directions
        .cfw-tooltip-top {
            padding-bottom: settings.$tooltip-arrow-height;

            .tooltip-arrow {
                bottom: 0;

                &::before {
                    top: 0;
                    border-width: settings.$tooltip-arrow-height (settings.$tooltip-arrow-width * .5) 0;
                    border-top-color: settings.$tooltip-arrow-color;
                }
            }
        }
        .cfw-tooltip-right {
            padding-left: settings.$tooltip-arrow-height;

            .tooltip-arrow {
                left: 0;
                width: settings.$tooltip-arrow-height;
                height: settings.$tooltip-arrow-width;

                &::before {
                    right: 0;
                    border-width: (settings.$tooltip-arrow-width * .5) settings.$tooltip-arrow-height (settings.$tooltip-arrow-width * .5) 0;
                    border-right-color: settings.$tooltip-arrow-color;
                }
            }
        }
        .cfw-tooltip-bottom {
            padding-top: settings.$tooltip-arrow-height;

            .tooltip-arrow {
                top: 0;

                &::before {
                    bottom: 0;
                    border-width: 0 (settings.$tooltip-arrow-width * .5) settings.$tooltip-arrow-height;
                    border-bottom-color: settings.$tooltip-arrow-color;
                }
            }
        }
        .cfw-tooltip-left {
            padding-right: settings.$tooltip-arrow-height;

            .tooltip-arrow {
                right: 0;
                width: settings.$tooltip-arrow-height;
                height: settings.$tooltip-arrow-width;

                &::before {
                    left: 0;
                    border-width: (settings.$tooltip-arrow-width * .5) 0 (settings.$tooltip-arrow-width * .5) settings.$tooltip-arrow-height;
                    border-left-color: settings.$tooltip-arrow-color;
                }
            }
        }

        .cfw-tooltip-auto {
            &[x-placement^="top"] {
                @extend .cfw-tooltip-top;
            }
            &[x-placement^="right"] {
                @extend .cfw-tooltip-right;
            }
            &[x-placement^="bottom"] {
                @extend .cfw-tooltip-bottom;
            }
            &[x-placement^="left"] {
                @extend .cfw-tooltip-left;
            }
        }

        /* rtl:end:ignore */
    }

    // Wrapper for the tooltip content
    .tooltip-body {
        max-width: settings.$tooltip-max-width;
        padding: settings.$tooltip-padding-y settings.$tooltip-padding-x;
        color: settings.$tooltip-color;
        text-align: center;
        background-color: settings.$tooltip-bg;
        @include border.border-radius(settings.$tooltip-border-radius);

        @if settings-options.$enable-tooltip-close {
            .close + & {
                padding-right: math.add(1.25rem, settings.$tooltip-close-padding-x);
            }
        }
    }
}
