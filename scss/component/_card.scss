.card {
    position: relative;
    display: flex;
    flex-direction: column;
    min-width: 0;
    margin-bottom: $card-margin-bottom;
    word-wrap: break-word;
    background-color: $card-bg;
    border: $card-border-width solid $card-border-color;
    @include border-radius($card-border-radius);

    > .list {
        &:first-child {
            @include border-top-radius($card-inner-border-radius);

            > .list-item:first-child {
                @if $enable-rounded {
                    @include border-top-radius($card-inner-border-radius);
                }
            }
        }

        &:last-child {
            margin-bottom: 0;
            @include border-bottom-radius($card-inner-border-radius);

            > .list-item:last-child {
                @if $enable-rounded {
                    @include border-bottom-radius($card-inner-border-radius);
                }
            }
        }
    }

    > .table {
        &:last-child {
            margin-bottom: 0;
        }
    }

    > hr {
        margin-right: 0;
        margin-left: 0;
    }
}

.card-body {
    // Enable `flex-grow: 1` for decks and groups so that card blocks take up
    // as much space as possible, ensuring footers are aligned to the bottom.
    flex: 1 1 auto;
    // Set a min-height to keep IE in check with image stretching
    min-height: 1px;
    padding: $card-padding-y $card-padding-x;
}

.card-title {
    margin-bottom: $card-title-margin-bottom;
}

.card-subtitle {
    margin-top: $card-subtitle-margin-top;
    margin-bottom: 0;
}

.card-text:last-child {
    margin-bottom: 0;
}

.card-link + .card-link {
    margin-left: $card-link-margin-left;
}

// Optional textual caps
.card-header {
    padding: $card-cap-padding-y $card-cap-padding-x;
    margin-bottom: 0; // Removes the default margin-bottom of <hN>
    background-color: $card-cap-bg;
    border-bottom: $card-border-width solid $card-cap-border-color;

    &:first-child {
        @include border-radius($card-border-radius $card-border-radius 0 0);
    }
}

.card-footer {
    padding: $card-cap-padding-y $card-cap-padding-x;
    background-color: $card-cap-bg;
    border-top: $card-border-width solid $card-cap-border-color;

    &:last-child {
        @include border-radius(0 0 $card-border-radius $card-border-radius);
    }
}

// Header navs
.card-header-tabs {
    margin-right: -($card-cap-padding-x / 2);
    margin-bottom: -$card-cap-padding-y;
    margin-left: -($card-cap-padding-x / 2);
    border-bottom: 0;
}
.card-header-pills {
    margin-right: -($card-cap-padding-x / 2);
    margin-left: -($card-cap-padding-x / 2);
}

// Card image overlay
.card-img-overlay {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    padding: $card-img-overlay-padding;
}

// Card images
.card-img {
    min-height: 1px;  // Stop stretch/white-space due to flexbox
}
.card-img-top {
    @include border-top-radius($card-inner-border-radius);
}
.card-img-bottom {
    @include border-bottom-radius($card-inner-border-radius);
}


// Card deck
// 1. Individual cards have margin-bottom by default.
//    Replace with single margin on the deck.
%card-deck-base {
    display: flex;
    flex-direction: column;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    $bprule: breakpoint-designator($breakpoint);

    .card-deck#{$bprule} {
        @extend %card-deck-base;

        @include media-breakpoint-up(#{$breakpoint}) {
            flex-flow: row wrap;
            margin-bottom: $card-margin-bottom; // 1

            > .card {
                // Flexbugs #4: https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored
                flex: 1 0 0%;
                margin-bottom: 0; // 1
            }
        }
    }
}

// Card deck gutters
@each $breakpoint, $gutter in $card-deck-gutter-widths {
    @include check-gutter-change($breakpoint, $card-deck-gutter-widths) {
        @include media-breakpoint-up($breakpoint) {
            %card-deck-gutter {
                margin-right: -($gutter / 2);
                margin-left: -($gutter / 2);

                > .card {
                    margin-right: ($gutter / 2);
                    margin-left: ($gutter / 2);
                }
            }
        }

        @each $bp-inner in map-keys($grid-breakpoints) {
            $bprule-inner: breakpoint-designator($bp-inner);
            .card-deck#{$bprule-inner} {
                @extend %card-deck-gutter;
            }
        }
    }
}


// Card group
// 1. Individual cards have margin-bottom by default,
//    Replace with single margin on the group.
%card-group-base {
    display: flex;
    flex-direction: column;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    $bprule: breakpoint-designator($breakpoint);

    .card-group#{$bprule} {
        @extend %card-group-base;

        @include media-breakpoint-up(#{$breakpoint}) {
            flex-flow: row wrap;
            margin-bottom: $card-margin-bottom; // 1

            > .card {
                // Flexbugs #4: https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored
                flex: 1 0 0%;
                margin-bottom: 0; // 1

                + .card {
                    margin-left: 0;
                    border-left: 0;
                }

                // Handle rounded corners
                @if $enable-rounded {
                    &:first-child:not(:only-child) {
                        @include border-end-radius(0);

                        .card-img-top,
                        .card-header {
                            @include border-top-end-radius(0);
                        }
                        .card-img-bottom,
                        .card-footer {
                            @include border-bottom-end-radius(0);
                        }
                    }
                    &:last-child:not(:only-child) {
                        @include border-start-radius(0);

                        .card-img-top,
                        .card-header {
                            @include border-top-start-radius(0);
                        }
                        .card-img-bottom,
                        .card-footer {
                            @include border-bottom-start-radius(0);
                        }
                    }
                    &:not(:first-child):not(:last-child):not(:only-child) {
                        @include border-radius(0);

                        .card-img-top,
                        .card-img-bottom,
                        .card-header,
                        .card-footer {
                            @include border-radius(0);
                        }
                    }
                }
            }
        }
    }
}


// Card columns
@each $breakpoint in map-keys($grid-breakpoints) {
    $bprule: breakpoint-designator($breakpoint);

    @include media-breakpoint-up(#{$breakpoint}) {
        .card-columns#{$bprule} {
            margin-bottom: $card-margin-bottom;
            column-count: $card-columns-count;
            column-gap: $card-columns-column-gap;
            orphans: 1;
            widows: 1;


            > .card {
                margin-top: $card-margin-bottom;
                margin-bottom: 0;
                break-inside: avoid;
                backface-visibility: hidden;

                &:first-child {
                    margin-top: 0;
                }
            }
        }
    }
}
