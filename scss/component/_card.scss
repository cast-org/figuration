.card {
    position: relative;
    display: block;
    margin-bottom: $card-spacer-y;
    background-color: $card-bg;
    border: $card-border-width solid $card-border-color;
    @include border-radius($card-border-radius);

    // Remove some margin spacing
    .list-group {
        margin-bottom: 0;
    }
    .list-group-flush .list-group-item {
        border-right-width: 0;
        border-left-width: 0;
    }
}

.card-block {
    @include clearfix;
    padding: $card-padding-y $card-padding-x;
}

.card-title {
    margin-bottom: $card-spacer-y;
}

.card-subtitle {
    margin-top: -($card-spacer-y / 2);
    margin-bottom: 0;
}

.card-text:last-child {
    margin-bottom: 0;
}

.card-link + .card-link {
    margin-left: $card-spacer-x;
}

.card {
    > .list-group:first-child {
        .list-group-item:first-child {
            border-top-width: 0;
            @if $enable-rounded {
                border-top-right-radius: $card-border-radius;
                border-top-left-radius: $card-border-radius;
            }
        }
    }

    > .list-group:last-child {
        .list-group-item:last-child {
            border-bottom-width: 0;
            @if $enable-rounded {
                border-bottom-right-radius: $card-border-radius;
                border-bottom-left-radius: $card-border-radius;
            }
        }
    }
}

// Optional textual caps
.card-header {
    @include clearfix;
    padding: $card-padding-y $card-padding-x;
    background-color: $card-cap-bg;
    border-bottom: $card-border-width solid $card-border-color;

    &:first-child {
        @include border-radius($card-border-radius $card-border-radius 0 0);
    }
}

.card-footer {
    @include clearfix;
    padding: $card-padding-y $card-padding-x;
    background-color: $card-cap-bg;
    border-top: $card-border-width solid $card-border-color;

    &:last-child {
        @include border-radius(0 0 $card-border-radius $card-border-radius);
    }
}


// Header navs
.card-header-tabs {
    margin-right: -($card-spacer-x / 2);
    margin-bottom: -$card-spacer-y;
    margin-left: -($card-spacer-x / 2);
    border-bottom: 0;
}
.card-header-pills {
    margin-right: -($card-spacer-x / 2);
    margin-left: -($card-spacer-x / 2);
}

// Background variations
@each $theme, $colors in $context-themes {
    $bg:        map-get($colors, "control-bg");
    $border:    map-get($colors, "control-border");

    .card-#{$theme} {
        @include card-variant($bg, $border);
    }
}

// Remove all backgrounds
@each $theme, $colors in $context-themes {
    $border: map-get($colors, "context-border");

    .card-outline-#{$theme} {
        @include card-outline-variant($border);
    }
}

// Inverse text within a card for use with dark backgrounds
.card-inverse {
    @include card-inverse;
}

// Blockquote
.card-blockquote {
    padding: 0;
    margin-bottom: 0;
    border-left: 0;
}

// Card image
.card-img {
    @include border-radius($card-border-radius);
}
.card-img-overlay {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    padding: $card-img-overlay-padding;
}

// Card image caps
.card-img-top {
    @include border-radius($card-border-radius $card-border-radius 0 0);
}
.card-img-bottom {
    @include border-radius(0 0 $card-border-radius $card-border-radius);
}

// Card deck
// Some style resetting here for margins across the two variations
// (one flex, one table). Individual cards have margin-bottom by
// default, but they're ignored due to table styles. For a consistent design,
// we've done the same to the flex variation.
//
// Those changes are noted by `// Margin balancing`
@include media-breakpoint-up(sm) {
    @if $enable-flex-full {
        .card-deck {
            @extend %card-deck-flex;
        }

        .card-deck-wrapper {
            margin-right: ($card-deck-margin / -2);
            margin-left: ($card-deck-margin / -2);
        }
    } @else {
        .card-deck {
            display: table;
            width: 100%;
            margin-bottom: $card-spacer-y;
            table-layout: fixed;
            border-spacing: $card-deck-margin 0;

            .card {
                display: table-cell;
                margin-bottom: 0;
                vertical-align: top;
            }
        }

        .card-deck-wrapper {
            margin-right: (-$card-deck-margin);
            margin-left: (-$card-deck-margin);
        }

        @if $enable-flex-opt {
            .card-deck-flex {
                @extend %card-deck-flex;
            }

            .card-deck-wrapper .card-deck-flex {
                padding-right: ($card-deck-margin / 2);
                padding-left: ($card-deck-margin / 2);
                margin-right: 0;
                margin-left: 0;
            }
        }
    }

    // This needs to come later so the CSS if generated after .card-deck
    %card-deck-flex {
        display: flex;
        flex-flow: row wrap;
        margin-right: 0;
        margin-bottom: $card-spacer-y; // Margin balancing
        margin-left: 0;

        .card {
            flex: 1 0 0;
            margin-right: ($card-deck-margin / 2);
            margin-bottom: 0; // Margin balancing
            margin-left: ($card-deck-margin / 2);
        }
    }
}

// Card groups
@include media-breakpoint-up(sm) {
    .card-group {
        @if $enable-flex-full {
            display: flex;
            flex-flow: row wrap;
        } @else {
            display: table;
            width: 100%;
            margin-bottom: $card-spacer-y;
            table-layout: fixed;
        }

        .card {
            margin-bottom: 0;

            @if $enable-flex-full {
                flex: 1 0 0;
            } @else {
                display: table-cell;
                vertical-align: top;
            }

            + .card {
                margin-left: 0;
                border-left: 0;
            }

            // Handle rounded corners
            @if $enable-rounded {
                &:first-child {
                    @include border-right-radius(0);

                    .card-img-top {
                        border-top-right-radius: 0;
                    }
                    .card-img-bottom {
                        border-bottom-right-radius: 0;
                    }
                }
                &:last-child {
                    @include border-left-radius(0);

                    .card-img-top {
                        border-top-left-radius: 0;
                    }
                    .card-img-bottom {
                        border-bottom-left-radius: 0;
                    }
                }
                &:not(:first-child):not(:last-child) {
                    border-radius: 0;

                    .card-img-top,
                    .card-img-bottom {
                        border-radius: 0;
                    }
                }
            }
        }
    }

    @if $enable-flex-opt {
        .card-group-flex {
            display: flex;
            flex-flow: row wrap;
            width: initial;
            table-layout: initial;

            .card {
                display: initial;
                flex: 1 0 0;
                vertical-align: initial;
            }
        }
    }
}


// Card columns
@include media-breakpoint-up(sm) {
    .card-columns {
        column-count: 3;
        column-gap: $card-columns-sm-up-column-gap;

        .card {
            display: inline-block;
            width: 100%; // Don't let them exceed the column width
        }
    }
}
