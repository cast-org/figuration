// Base class
// Easily usable on <ul>, <ol>, or <div>.
.list-group {
    @if $enable-flex-full {
        display: flex;
        flex-direction: column;
    }

    // No need to set list-style: none; since .list-group-item is block level
    padding-left: 0; // reset padding because ul and ol
    margin-bottom: 1rem;
}

@if $enable-flex-opt {
    .list-group-flex {
        display: flex;
        flex-direction: column;
    }
}

// Individual list items
// Use on `li`s or `div`s within the `.list-group` parent.
.list-group-item {
    @if $enable-flex-full {
        display: flex;
        flex-flow: row wrap;
        align-items: center;
    } @else {
        display: block;
    }

    position: relative;
    padding: $list-group-item-padding-y $list-group-item-padding-x;
    // Place the border on the list items and negative margin up for better styling
    margin-bottom: -$list-group-border-width;
    background-color: $list-group-bg;
    border: $list-group-border-width solid $list-group-border-color;

    &:first-child {
        @include border-top-radius($list-group-border-radius);
    }

    &:last-child {
        margin-bottom: 0;
        @include border-bottom-radius($list-group-border-radius);
    }

    &.disabled {
        @include plain-hover-focus {
            color: $list-group-disabled-color;
            text-decoration: none;
            cursor: $cursor-disabled;
            background-color: $list-group-disabled-bg;

            // Force color to inherit for custom content
            .list-group-item-heading {
                color: inherit;
            }
            .list-group-item-text {
                color: $list-group-disabled-text-color;
            }
        }
    }

    &.active {
        z-index: 2; // Place active items above their siblings for proper border styling
        color: $list-group-active-color;
        background-color: $list-group-active-bg;
        border-color: $list-group-active-border;

        // Force color to inherit for custom content
        .list-group-item-heading,
        .list-group-item-heading > small,
        .list-group-item-heading > .small {
            color: inherit;
        }
        .list-group-item-text {
            color: $list-group-active-text-color;
        }
    }
}

@if $enable-flex-opt {
    .list-group-flex .list-group-item {
        display: flex;
        flex-flow: row wrap;
        align-items: center;
    }
}

.list-group-flush {
    .list-group-item {
        border-radius: 0;
    }
}


// Interactive list items
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.
.list-group-item-action {
    width: 100%; // For `<button>`s (anchors become 100% by default though)
    color: $list-group-link-color;
    text-align: inherit; // For `<button>`s (anchors inherit)
    text-decoration: none;

    .list-group-item-heading {
        color: $list-group-link-heading-color;
    }

    // Hover state
    @include hover-focus {
        color: $list-group-link-hover-color;
        text-decoration: none;
        background-color: $list-group-hover-bg;
    }

    // Active hover state
    &.active {
        @include hover-focus {
            color: $list-group-active-color;
            background-color: $list-group-active-hover-bg;
        }
    }
}


// Contextual variants
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.
@each $theme, $colors in $context-themes {
    $color: map-get($colors, "context-color");
    $bg:    map-get($colors, "context-bg");

    @include list-group-item-variant(#{$theme}, $bg, $color);
}


// Custom content options
// Extra classes for creating well-formatted content within `.list-group-item`s.
.list-group-item-heading {
    margin-top: 0;
    margin-bottom: $list-group-item-heading-margin-bottom;
}
.list-group-item-text {
    margin-bottom: 0;
    line-height: 1.3;
}
