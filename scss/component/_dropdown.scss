// The dropdown wrapper (`<div>`) and submenu (`<ul>`)
.dropup,
.dropdown,
.dropdown-submenu {
    position: relative;
}

.dropdown-toggle {
    // Generate the caret automatically
    &::after {
        display: inline-block;
        width: 0;
        height: 0;
        margin-right: .25rem;
        margin-left: .25rem;
        vertical-align: middle;
        content: "";
        border-top: $caret-width solid;
        border-right: $caret-width solid transparent;
        border-left: $caret-width solid transparent;
    }

    // Prevent the focus on the dropdown toggle when closing dropdowns
    &:focus {
        outline: 0;
    }
}

.dropup {
    .dropdown-toggle {
        &::after {
            border-top: 0;
            border-bottom: $caret-width solid;
        }
    }
    &.open {
        .dropdown-toggle {
            &::after {
                border-top: $caret-width solid;
                border-bottom: 0;
            }
        }
    }
}

// The dropdown menu
.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: $zindex-dropdown;
    display: none; // none by default, but block on "open" of the menu
    float: left;
    min-width: $dropdown-min-width;
    padding: $dropdown-padding-y 0;
    margin: $dropdown-margin-top 0 0; // override default ul
    font-size: $font-size-base;
    color: $body-color;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    list-style: none;
    background-color: $dropdown-bg;
    background-clip: padding-box;
    border: $dropdown-border-width solid $dropdown-border-color;
    @include border-radius(0 $border-radius $border-radius $border-radius);
    @include box-shadow($dropdown-box-shadow);
}

// Links within a dropdown menu
//Because we support nested dropdown, force list usage not the `.dropdown-item` syntax
.dropdown-menu > li > a {
    display: block;
    padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    clear: both;
    font-weight: $font-weight-normal;
    color: $dropdown-link-color;
    text-decoration: none;
    white-space: nowrap; // prevent links from randomly breaking onto new lines

    @include hover-focus {
        color: $dropdown-link-hover-color;
        text-decoration: none;
        background-color: $dropdown-link-hover-bg;
    }
}
.dropdown-menu {
    // Active state
    > .active > a {
        color: $dropdown-link-active-color;
        text-decoration: none;
        background-color: $dropdown-link-active-bg;
        outline: 0;

        @include hover-focus {
            color: $dropdown-link-active-color;
            text-decoration: none;
            background-color: $dropdown-link-active-hover-bg;
            outline: 0;
        }
    }

    // Disabled state
    // Gray out text and ensure the hover/focus state remains gray
    > .disabled > a {
        @include plain-hover-focus {
            color: $dropdown-link-disabled-color;
        }

        // Nuke hover/focus effects
        @include hover-focus {
            text-decoration: none;
            cursor: $cursor-disabled;
            background-color: transparent;
            background-image: none; // Remove CSS gradient
            @include reset-filter();
        }
    }
}

// Dropdown submenu additions
.dropdown-submenu {
    > .dropdown-menu {
        top: 0;
        left: 100%;
        //margin-top: -($dropdown-margin-top + $dropdown-padding-y - $border-width);
        margin-top: calc(-#{($dropdown-margin-top + $dropdown-padding-y)} + #{$border-width});
        @include border-radius(0 $border-radius $border-radius $border-radius);
    }
    > a::after {
        position: absolute;
        top: 50%;
        right: .35rem;
        display: block;
        width: 0;
        height: 0;
        margin-top: -$dropdown-caret-width;
        content: " ";
        border-top: $dropdown-caret-width solid transparent;
        border-bottom: $dropdown-caret-width solid transparent;
        border-left: $dropdown-caret-width solid $dropdown-caret-color;
    }
    &:hover > a::after {
        border-left-color: $dropdown-caret-color;
    }

    &.dropdown-menu-left {
        > a::after {
            right: auto;
            left: .35rem;
            border-right: $dropdown-caret-width solid $dropdown-caret-color;
            border-left: 0;
        }
        &:hover > a::after {
            border-right-color: $dropdown-caret-color;
        }
    }
}

// Open state for the dropdown and dropdown-toggle
.open {
    // Show the menu
    > .dropdown-menu {
        display: block;
    }
    // Reverse normal toggle caret
    .dropdown-toggle {
        &::after {
            border-top: 0;
            border-bottom: $caret-width solid;
        }
    }
    // Reverse dropup toggle caret
    .dropup {
        .dropdown-toggle {
            &::after {
                border-top: $caret-width solid;
                border-bottom: 0;
            }
        }
    }

    // Remove the outline when :focus is triggered
    > a {
        outline: 0;
    }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
    right: 0;
    left: auto; // Reset the default from `.dropdown-menu`
    @include border-radius($border-radius 0 $border-radius $border-radius);
}
.dropdown-submenu.dropdown-menu-right > .dropdown-menu {
    right: -100%;
    left: auto;
    margin-right: -($border-width * 2);
    @include border-radius(0 $border-radius $border-radius $border-radius);
}

.dropdown-menu-left {
    right: auto;
    left: 0;
}
.dropdown-submenu.dropdown-menu-left > .dropdown-menu {
    right: auto;
    left: -100%;
    margin-left: -($border-width * 2);
    @include border-radius($border-radius 0 $border-radius $border-radius);
}

// Dropdown section headers
.dropdown-header {
    display: block;
    padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    font-size: $dropdown-header-font-size;
    font-weight: $dropdown-header-font-weight;
    line-height: inherit;
    color: $dropdown-header-color;
    white-space: nowrap; // as with > li > a

    li & {
        margin-bottom: 0;
    }
}

// Dividers (basically an `<hr>`) within the dropdown
.dropdown-menu .divider,
.dropdown-divider {
    @include nav-divider($dropdown-divider-color);
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: $zindex-dropdown-backdrop;
}


// Allow for dropdowns to go bottom up (aka, dropup-menu)
// Just add .dropup after the standard .dropdown class and you're set.
// TODO: abstract this so that the navbar fixed styles are not placed here?
.dropup,
.navbar-fixed-bottom .dropdown {
    // Reverse the caret
    .caret {
        content: "";
        border-top: 0;
        border-bottom: $caret-width solid;
    }
    &.open {
        .caret {
            border-top: $caret-width solid;
            border-bottom: 0;
        }
    }

    // Different positioning for bottom up menu
    .dropdown-menu {
        top: auto;
        bottom: 100%;
        margin-top: 0;
        margin-bottom: $dropdown-margin-top;
        @include border-radius($border-radius $border-radius $border-radius 0);
    }

    .dropdown-submenu {
        > .dropdown-menu {
            top: auto;
            bottom: 0;
            margin-top: 0;
            //margin-bottom: -($dropdown-margin-top + $dropdown-padding-y - $border-width);
            margin-bottom: calc(-#{($dropdown-margin-top + $dropdown-padding-y)} + #{$border-width});
            @include border-radius($border-radius $border-radius $border-radius 0);
        }
    }
}

// Allow for menus and submenus to go left
.dropdown-menu-left {
    .dropdown-menu {
        right: 0;
        left: auto;
        @include border-radius($border-radius 0 $border-radius $border-radius);

        &.dropdown-menu-left {
            right: auto;
            left: 0;
        }
    }

    //.dropdown-submenu {
    .dropdown-submenu:not(.dropdown-menu-right) {
        > a::after {
            right: auto;
            left: .35rem;
            border-right: $dropdown-caret-width solid $dropdown-caret-color;
            border-left: 0;
        }
        &:hover > a::after {
            border-right-color: $dropdown-caret-color;
        }

        > .dropdown-menu {
            right: 100%;
            left: auto;
            margin-left: auto;
            @include border-radius($border-radius 0 $border-radius $border-radius);
        }
    }
}

.dropup.dropdown-menu-left {
    .dropdown-menu {
        @include border-radius($border-radius $border-radius 0 $border-radius);
    }

    .dropdown-submenu {
        > .dropdown-menu {
            @include border-radius($border-radius $border-radius 0 $border-radius);
        }
    }
}

// Backwards navigation item - extends a menu item
.dropdown-back {
    position: relative;

    > a::before {
        position: absolute;
        top: 50%;
        left: .35rem;
        display: block;
        width: 0;
        height: 0;
        margin-top: -$dropdown-caret-width;
        content: " ";
        border-top: $dropdown-caret-width solid transparent;
        border-right: $dropdown-caret-width solid $dropdown-caret-color;
        border-bottom: $dropdown-caret-width solid transparent;
    }
    &:hover > a::before {
        border-right-color: $dropdown-caret-color;
    }

    // Back caret alignment and sub-aligment overrides
    .dropdown-menu-left &,
    .dropdown-menu-right .dropdown-menu-left & {
        > a::before {
            right: .35rem;
            left: auto;
            border-right: 0;
            border-left: $dropdown-caret-width solid $dropdown-caret-color;
        }
        &:hover a::before {
            border-left-color: $dropdown-caret-color;
        }
    }

    .dropdown-menu-right &,
    .dropdown-menu-left .dropdown-menu-right & {
        > a::before {
            right: auto;
            left: .35rem;
            border-right: $dropdown-caret-width solid $dropdown-caret-color;
            border-left: 0;
        }
        &:hover a::before {
            border-right-color: $dropdown-caret-color;
        }
    }
}
