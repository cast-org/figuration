// stylelint-disable selector-no-qualifying-type

// The dropdown wrapper (`<div>`) and submenu (`<ul>`)
.dropup,
.dropdown,
.dropdown-submenu {
    position: relative;
}

.dropdown-container {
    position: absolute;
    pointer-events: none;
}

.dropdown-toggle {
    // Generate the caret automatically
    &::after {
        margin-left: $dropdown-toggle-margin-x;
        @include caret();
    }

    &:empty::after {
        margin-left: 0;
    }
}

// The dropdown menu
.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: $zindex-dropdown;
    display: none; // none by default, but block on "open" of the menu
    float: left;
    min-width: $dropdown-min-width;
    padding: $dropdown-padding-y 0;
    margin: $dropdown-spacer 0 0; // override default ul
    font-size: $font-size-base;
    color: $body-color;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    list-style: none;
    pointer-events: auto;
    background-color: $dropdown-bg;
    background-clip: padding-box;
    border: $dropdown-border-width solid $dropdown-border-color;
    @include border-radius($dropdown-attach-border-radius $dropdown-border-radius $dropdown-border-radius $dropdown-border-radius);
    @include box-shadow($dropdown-box-shadow);
}

// Dropdown submenu additions
.dropdown-submenu {
    > .dropdown-menu {
        top: 0;
        left: 100%;
        margin-top: calc(-#{($dropdown-spacer + $dropdown-padding-y)} + #{$border-width});
        @include border-radius($dropdown-attach-border-radius $dropdown-border-radius $dropdown-border-radius $dropdown-border-radius);
    }

    > a,
    > .dropdown-item {
        &::after {
            position: absolute;
            top: 50%;
            right: $dropdown-caret-spacer-x;
            margin-top: -$dropdown-caret-width;
            @include caret(end, $dropdown-caret-width, $dropdown-caret-color);
        }

        &.active:not(:hover):not(:focus)::after {
            @include caret-end($dropdown-caret-width, $dropdown-caret-active-color);
        }
    }
}

// Open state for the dropdown and dropdown-toggle
.open {
    // Show the menu
    > .dropdown-menu {
        display: block;
    }
    // Reverse toggle caret
    .dropdown-toggle {
        &::after {
            @include caret-up();
        }
    }
}

// Allow for menus to go left - aligning to right side of the control
.dropdown-menu-reverse {
    .dropdown-menu {
        right: 0;
        left: auto;
        @include border-radius($dropdown-border-radius $dropdown-attach-border-radius $dropdown-border-radius $dropdown-border-radius);
    }
}

// Submenu alignment
// The `.dropdown-subalign-*` classes are added automatically by the dropdown.js widget
// This removes the need for overly convoluted CSS rules
.dropdown-subalign-forward {
    > .dropdown-menu {
        right: auto;
        left: 100%;
        margin-right: -($border-width * 2);
        margin-left: 0;
        @include border-radius($dropdown-attach-border-radius $dropdown-border-radius $dropdown-border-radius $dropdown-border-radius);
    }
}

.dropdown-subalign-reverse {
    > .dropdown-menu {
        right: 100%;
        left: auto;
        margin-right: 0;
        margin-left: -($border-width * 2);
        @include border-radius($dropdown-border-radius $dropdown-attach-border-radius $dropdown-border-radius $dropdown-border-radius);
    }
    > a,
    > .dropdown-item {
        &::after {
            right: auto;
            left: $dropdown-caret-spacer-x;
            @include caret-start($dropdown-caret-width, $dropdown-caret-color);
        }

        &.active:not(:hover):not(:focus)::after {
            @include caret-end($dropdown-caret-width, $dropdown-caret-color);
        }
    }
}

// Links within a dropdown menu
// Because we support nested dropdowns, it is currently required to use a
// list for semantic markup, but we include a `.dropdown-item`
// for non-anchor items
// 1- `<button>`s require some overrides
.dropdown-menu a,
.dropdown-item {
    display: block;
    width: 100%; // 1
    padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    margin: 0;
    clear: both;
    font-weight: $font-weight-normal;
    color: $dropdown-link-color;
    text-align: inherit; // 1
    text-decoration: none;
    white-space: nowrap; // prevent links from randomly breaking onto new lines
    background: none; // 1
    border: 0; // 1

    &.active {
        color: $dropdown-link-active-color;
        text-decoration: none;
        background-color: $dropdown-link-active-bg;
    }

    @include hover-focus {
        color: $dropdown-link-hover-color;
        text-decoration: none;
        background-color: $dropdown-link-hover-bg;
        outline: 0;
    }

    &.disabled,
    &:disabled {
        color: $dropdown-link-disabled-color;
        text-decoration: none;
        cursor: $cursor-disabled;
        background-color: $dropdown-link-disabled-bg;
        background-image: none; // Remove CSS gradient
    }
}

.dropdown-item {
    &.form-check-label {
        .form-check-input {
            margin-left: $dropdown-form-check-input-margin-x - $form-check-input-gutter;
        }
    }
}

// Dropdown section headers
.dropdown-header {
    display: block;
    padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    font-size: $dropdown-header-font-size;
    font-weight: $dropdown-header-font-weight;
    line-height: inherit;
    color: $dropdown-header-color;
    white-space: nowrap; // as with > li > a

    li & {
        margin-bottom: 0;
    }
}

// Dropdown non-interactive text item
.dropdown-text {
    display: block;
    padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    color: $dropdown-text-color;
}

// Divider (basically an `<hr>`) within the dropdown
.dropdown-divider {
    @include divider-h($dropdown-divider-color, $dropdown-divider-width, $dropdown-divider-spacer);
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
// Add .dropup after the standard .dropdown class
.dropup {
    // Reverse the caret
    .caret {
        @include caret-up();
    }
    .dropdown-toggle {
        &::after {
            @include caret-up();
        }
    }
    &.open {
        .caret {
            @include caret-down();
        }
        .dropdown-toggle {
            &::after {
                @include caret-down();
            }
        }
    }

    // Different positioning for bottom up menu
    .dropdown-menu {
        top: auto;
        bottom: 100%;
        margin-top: 0;
        margin-bottom: $dropdown-spacer;
        @include border-radius($dropdown-border-radius $dropdown-border-radius $dropdown-border-radius $dropdown-attach-border-radius);
    }

    .dropdown-submenu {
        > .dropdown-menu {
            top: auto;
            bottom: 0;
            margin-top: 0;
            margin-bottom: calc(-#{($dropdown-spacer + $dropdown-padding-y)} + #{$border-width});
            @include border-radius($dropdown-border-radius $dropdown-border-radius $dropdown-border-radius $dropdown-attach-border-radius);
        }
    }

    // Dropup corner overrides
    &.dropdown-menu-reverse {
        .dropdown-menu {
            @include border-radius($dropdown-border-radius $dropdown-border-radius $dropdown-attach-border-radius $dropdown-border-radius);
        }
    }
    .dropdown-subalign-forward {
        > .dropdown-menu {
            @include border-radius($dropdown-border-radius $dropdown-border-radius $dropdown-border-radius $dropdown-attach-border-radius);
        }
    }
    .dropdown-subalign-reverse {
        > .dropdown-menu {
            @include border-radius($dropdown-border-radius $dropdown-border-radius $dropdown-attach-border-radius $dropdown-border-radius);
        }
    }
}

// Backwards navigation item - extends a menu item
.dropdown-back {
    position: relative;

    > a::before {
        position: absolute;
        top: 50%;
        left: $dropdown-back-spacer-x;
        margin-top: -$dropdown-caret-width;
        @include caret(start, $dropdown-back-width, $dropdown-back-color);
    }
}

// Change back caret direction for reverse facing menus
// The `.dropdown-back-reverse` class is added automatically by the dropdown.js widget
// This removes the need for overly convoluted CSS rules
.dropdown-back-reverse {
    > a::before {
        right: $dropdown-back-spacer-x;
        left: auto;
        @include caret-end($dropdown-back-width, $dropdown-back-color);
    }
}
