// stylelint-disable selector-no-qualifying-type
@if $enable-dropdown {
    // The dropdown wrapper (`<div>`) and submenu (`<ul>`)
    .dropdown,
    .dropdown-submenu {
        position: relative;
    }

    .dropdown-container {
        position: absolute;
        pointer-events: none;
    }

    // The dropdown menu
    .dropdown-menu {
        position: absolute;
        top: 100%;
        left: 0;
        z-index: $zindex-dropdown;
        display: none; // none by default, but block on "open" of the menu
        min-width: $dropdown-min-width;
        padding: $dropdown-padding-y 0;
        margin: $dropdown-spacer 0; // override default ul
        @include font-size($dropdown-font-size);
        color: $dropdown-color;
        text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
        list-style: none;
        pointer-events: auto;
        background-color: $dropdown-bg;
        background-clip: padding-box;
        border: $dropdown-border-width solid $dropdown-border-color;
        @include border-radius($dropdown-border-radius);
        @include box-shadow($dropdown-box-shadow);

        &.open {
            display: block;
        }
    }

    // Dropdown submenu additions
    .dropdown-submenu {
        > .dropdown-menu {
            margin-top: calc(#{$dropdown-border-width} - #{$dropdown-spacer} - #{$dropdown-padding-y});
        }

        > a,
        > .dropdown-item {
            &::after {
                position: absolute;
                top: calc((#{$line-height-base} * #{$dropdown-font-size}) / 2);
                right: $dropdown-caret-spacer-x;
                @include caret(end, $dropdown-caret-width, $dropdown-caret-color);
            }

            &.active:not(:hover):not(:focus)::after {
                @include caret-end($dropdown-caret-width, $dropdown-caret-active-color);
            }
        }
    }

    // Allow for menus to in reverse direction - aligning to end side of the control
    .dropreverse {
        right: 0;
        left: auto;
    }

    // Links within a dropdown menu
    // Because we support nested dropdowns, it is currently required to use a
    // list for semantic markup, but we include a `.dropdown-item`
    // for non-anchor items
    // 1- `<button>`s require some overrides
    .dropdown-menu a,
    .dropdown-item {
        display: block;
        width: 100%; // 1
        padding: $dropdown-item-padding-y $dropdown-item-padding-x;
        margin: 0;
        clear: both;
        font-weight: $font-weight-normal;
        color: $dropdown-link-color;
        text-align: inherit; // 1
        text-decoration: none;
        white-space: nowrap; // prevent links from randomly breaking onto new lines
        background: none; // 1
        border: 0; // 1

        // Prevent item from overflowing when no horizontal menu padding
        @if $dropdown-padding-y == 0 {
            &:first-child {
                @include border-top-radius($dropdown-inner-border-radius);
            }

            &:last-child {
                @include border-bottom-radius($dropdown-inner-border-radius);
            }
        }

        &.active {
            color: $dropdown-link-active-color;
            text-decoration: none;
            background-color: $dropdown-link-active-bg;
        }

        @include hover-focus() {
            color: $dropdown-link-hover-color;
            text-decoration: none;
            background-color: $dropdown-link-hover-bg;
        }

        &.disabled,
        &:disabled {
            color: $dropdown-link-disabled-color;
            text-decoration: none;
            pointer-events: none;
            background-color: $dropdown-link-disabled-bg;
            background-image: none; // Remove CSS gradient
        }
    }

    // Dropdown section headers
    @if $enable-dropdown-header {
        .dropdown-header {
            display: block;
            padding: $dropdown-header-padding;
            margin-bottom: 0;
            @include font-size($dropdown-header-font-size);
            font-weight: $dropdown-header-font-weight;
            line-height: inherit;
            color: $dropdown-header-color;
            white-space: nowrap; // as with > li > a
        }
    }

    // Dropdown non-interactive text item
    @if $enable-dropdown-text {
        .dropdown-text {
            display: block;
            padding: $dropdown-item-padding-y $dropdown-item-padding-x;
            color: $dropdown-text-color;
        }
    }

    // Divider (basically an `<hr>`) within the dropdown
    @if $enable-dropdown-divider {
        .dropdown-divider {
            @include divider-h($dropdown-divider-color, $dropdown-divider-width, $dropdown-divider-spacer);
        }
    }

    // Submenu and side alignments
    // The `.dropdown-subalign-*` classes are added automatically by the dropdown.js widget
    // This removes the need for overly convoluted CSS rules

    .dropdown-subalign-reverse,
    .dropstart {
        top: 0;
        right: 100%;
        left: auto;
        margin-top: 0;
        margin-right: $dropdown-spacer;
    }
    .dropdown-subalign-reverse {
        margin-right: 0;
    }

    .dropdown-subalign-forward,
    .dropend {
        top: 0;
        right: auto;
        left: 100%;
        margin-top: 0;
        margin-left: $dropdown-spacer;
    }
    .dropdown-subalign-forward {
        margin-left: 0;
    }

    // Allow for dropdowns to go bottom up (aka, dropup menu)
    // Add .dropup onto the .dropdown-menu element
    @if $enable-dropdown-dropup {
        .dropup {
            top: auto;
            bottom: 100%;
            margin-top: 0;
            margin-bottom: $dropdown-spacer;

            .dropdown-submenu {
                > .dropdown-menu {
                    top: auto;
                    bottom: 0;
                    margin-top: 0;
                    margin-bottom: calc(#{$dropdown-border-width} - #{$dropdown-spacer} - #{$dropdown-padding-y});
                }
            }

            &.dropstart,
            &.dropend {
                bottom: 0;
                margin-bottom: 0;
            }

        }
    }

    // When using Popper, reset basic dropdown position
    .dropdown-menu,
    .dropdown-submenu > .dropdown-menu {
        &[x-placement] {
            right: auto;
            bottom: auto;
        }
    }

    @if $enable-dropdown-back {
        // Backwards navigation item - extends a menu item
        .dropdown-back {
            position: relative;

            > button::before {
                position: absolute;
                top: calc((#{$line-height-base} * #{$dropdown-font-size}) / 2);
                left: $dropdown-back-spacer-x;
                @include caret(start, $dropdown-back-width, $dropdown-back-color);
            }
        }

        // Change back caret direction for reverse facing menus
        // The `.dropdown-back-reverse` class is added automatically by the dropdown.js widget
        // This removes the need for overly convoluted CSS rules
        .dropdown-back-reverse {
            > a::before {
                right: $dropdown-back-spacer-x;
                left: auto;
                @include caret-end($dropdown-back-width, $dropdown-back-color);
            }
        }
    }
}
