@use "../mixins/backdrop";
@use "../mixins/box-shadow";
@use "../mixins/breakpoints";
@use "../mixins/transition";
@use "../settings";
@use "../settings-options";

@if settings-options.$enable-offcanvas {

    @each $bp in settings.$offcanvas-breakpoints {
        $next: breakpoints.breakpoint-next($bp, settings.$grid-breakpoints);
        $bprule: breakpoints.breakpoint-designator($next);

        @include breakpoints.media-breakpoint-down($bp) {
            %offcanvas#{$bp} {
                position: fixed;
                bottom: 0;
                z-index: settings.$zindex-offcanvas;
                display: flex;
                flex-direction: column;
                max-width: 100%;
                color: settings.$offcanvas-color;
                visibility: hidden;
                background-color: settings.$offcanvas-bg;
                background-clip: padding-box;
                outline: 0;
                @include box-shadow.box-shadow(settings.$offcanvas-box-shadow);

                @if settings-options.$enable-offcanvas-side-start {
                    &.offcanvas-start {
                        top: 0;
                        left: 0;
                        width: settings.$offcanvas-horizontal-width;
                        border-right: settings.$offcanvas-border-width solid settings.$offcanvas-border-color;
                        transform: translateX(-100%);
                    }
                }

                @if settings-options.$enable-offcanvas-side-end {
                    &.offcanvas-end {
                        top: 0;
                        right: 0;
                        width: settings.$offcanvas-horizontal-width;
                        border-left: settings.$offcanvas-border-width solid settings.$offcanvas-border-color;
                        transform: translateX(100%);
                    }
                }

                @if settings-options.$enable-offcanvas-side-top {
                    &.offcanvas-top {
                        top: 0;
                        right: 0;
                        left: 0;
                        height: settings.$offcanvas-vertical-height;
                        max-height: 100%;
                        border-bottom: settings.$offcanvas-border-width solid settings.$offcanvas-border-color;
                        transform: translateY(-100%);
                    }
                }

                @if settings-options.$enable-offcanvas-side-bottom {
                    &.offcanvas-bottom {
                        right: 0;
                        left: 0;
                        height: settings.$offcanvas-vertical-height;
                        max-height: 100%;
                        border-top: settings.$offcanvas-border-width solid settings.$offcanvas-border-color;
                        transform: translateY(100%);
                    }
                }


                &.showing,
                &.in:not(.hiding) {
                    transform: none;
                }

                &.showing,
                &.in.hiding {
                    @include transition.transition(settings.$offcanvas-transition);
                }

                &.showing,
                &.hiding,
                &.in {
                    visibility: visible;
                }

                // Offcanvas rootElement specified
                .offcanvas-open:not(body) & {
                    position: absolute;
                }
            }

            // Skip largest breakpoint
            @if breakpoints.breakpoint-max($bp, settings.$grid-breakpoints) != null {
                @if settings-options.$enable-offcanvas-responsive {
                    .offcanvas#{$bprule} {
                        @extend %offcanvas#{$bp};
                    }
                }
            } @else {
                .offcanvas {
                    @extend %offcanvas#{$bp};
                }
            }
        }

        @if not ($next == null) {
            @if settings-options.$enable-offcanvas-responsive {
                @include breakpoints.media-breakpoint-up($next) {
                    .offcanvas#{$bprule} {
                        height: auto;
                        background-color: transparent !important; // stylelint-disable-line declaration-no-important
                        border-width: 0;

                        .offcanvas-header {
                            display: none;
                        }

                        .offcanvas-body {
                            display: flex;
                            flex-grow: 0;
                            padding: 0;
                            overflow-y: visible;
                            // Reset `background-color` in case `.bg-*` classes are used in offcanvas
                            background-color: transparent !important; // stylelint-disable-line declaration-no-important
                        }
                    }
                }
            }
        }
    }

    .offcanvas-backdrop {
        @include backdrop.backdrop-overlay(settings.$zindex-offcanvas-backdrop, settings.$offcanvas-backdrop-bg, settings.$offcanvas-backdrop-opacity);

        // Offcanvas rootElement specified
        .offcanvas-open:not(body) & {
            position: absolute;
            width: 100%;
            height: 100%;
        }
    }


    @if settings-options.$enable-offcanvas-header {
        .offcanvas-header {
            display: flex;
            align-items: flex-start;
            justify-content: space-between;
            padding: settings.$offcanvas-header-padding-y settings.$offcanvas-header-padding-x;
            color: settings.$offcanvas-header-color;
            background-color: settings.$offcanvas-header-bg;
            border-bottom: settings.$offcanvas-header-border-width solid settings.$offcanvas-header-border-color;

            // Close icon
            .close {
                // Make sure close appears 'after' the title
                order: 1;
                padding: settings.$offcanvas-close-padding-y settings.$offcanvas-close-padding-x;
                // Left auto margin keeps close pushed to the right side even when no title
                margin: (-(settings.$offcanvas-header-padding-y)) (-(settings.$offcanvas-header-padding-x)) (-(settings.$offcanvas-header-padding-y)) auto;
            }
        }
    }

    @if settings-options.$enable-offcanvas-title {
        .offcanvas-title {
            margin: 0;
            line-height: settings.$offcanvas-title-line-height;
        }
    }

    @if settings-options.$enable-offcanvas-body {
        .offcanvas-body {
            flex-grow: 1;
            padding: settings.$offcanvas-body-padding-y settings.$offcanvas-body-padding-x;
            overflow-y: auto;
        }
    }

    @if settings-options.$enable-offcanvas-footer {
        .offcanvas-footer {
            display: flex;
            align-items: center;
            justify-content: flex-end; // right align buttons
            padding: settings.$offcanvas-footer-padding-y settings.$offcanvas-footer-padding-x;
            color: settings.$offcanvas-footer-color;
            background-color: settings.$offcanvas-footer-bg;
            border-top: settings.$offcanvas-footer-border-width solid settings.$offcanvas-footer-border-color;

            // Simulate spaces between footer elements with margins
            > :not(:first-child) { margin-left: .25rem; }
            > :not(:last-child) { margin-right: .25rem; }
        }
    }

    // Close is blocked animation
    .offcanvas.offcanvas-blocked.in {
        @include transition.transition(settings.$offcanvas-blocked-transition);
        transform: settings.$offcanvas-blocked-transform;
    }
}
