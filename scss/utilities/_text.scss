// stylelint-disable declaration-no-important

// Alignment
.text-justify { text-align: justify; }
.text-nowrap  { white-space: nowrap; }

// Responsive alignment
@each $breakpoint in map-keys($grid-breakpoints) {
    $bprule: breakpoint-designator($breakpoint);

    @include media-breakpoint-up($breakpoint) {
        .text#{$bprule}-start  { text-align: left !important; }
        .text#{$bprule}-end    { text-align: right !important; }
        .text#{$bprule}-center { text-align: center !important; }
    }
}

// Transformation
.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

// Hidden text
@each $breakpoint in map-keys($grid-breakpoints) {
    $bprule: breakpoint-designator($breakpoint);

    @include media-breakpoint-up($breakpoint) {
        .text#{$bprule}-hide {
            @include text-hide();
        }
    }
}

// Weight and italics
.font-weight-light  { font-weight: $font-weight-light !important; }
.font-weight-normal { font-weight: $font-weight-normal !important; }
.font-weight-bold   { font-weight: $font-weight-bold !important; }
.font-italic        { font-style: italic !important; }

// Contextual colors
@each $theme, $colors in $context-themes {
    $color: map-get($colors, "control-bg");

    @include text-emphasis-variant(".text-#{$theme}", $color, $level-color-hover-delta);
}

// Palette colors
@if $enable-palette {
    @each $theme, $color in $palette-themes {
        @each $level in $palette-levels {
            @include text-emphasis-palette-variant(".text-#{$theme}-#{$level}", $color, $level, $level-color-hover-delta);
        }
    }
}

// Muted text
@include text-emphasis-variant(".text-muted", $text-muted, $level-color-hover-delta);

// Special case colors
// stylelint-disable selector-no-qualifying-type
.text-body {
    color: $body-color !important;
}
.text-light {
    color: $text-light-color !important;
}
a.text-light {
    @include hover-focus {
        color: $text-light-hover !important;
    }
}
.text-dark {
    color: $text-dark-color !important;
}
a.text-dark {
    @include hover-focus {
        color: $text-dark-hover !important;
    }
}
// stylelint-enable selector-no-qualifying-type

// Truncated text
.text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
