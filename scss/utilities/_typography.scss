// stylelint-disable declaration-no-important

@if $enable-utility-text {
    @if $enable-utility-text-justify {
        .text-justify { text-align: justify !important; }
    }
    @if $enable-utility-text-wrap {
        .text-wrap  { white-space: normal !important; }
    }
    @if $enable-utility-text-nowrap {
        .text-nowrap  { white-space: nowrap !important; }
    }

    // Responsive alignment
    @if $enable-utility-text-align {
        @each $breakpoint in $utility-text-align-breakpoints {
            $bprule: breakpoint-designator($breakpoint);

            @include media-breakpoint-up($breakpoint) {
                .text#{$bprule}-start  { text-align: left !important; }
                .text#{$bprule}-end    { text-align: right !important; }
                .text#{$bprule}-center { text-align: center !important; }
            }
        }
    }

    // Transformation
    @if $enable-utility-text-transform {
        .text-lowercase  { text-transform: lowercase !important; }
        .text-uppercase  { text-transform: uppercase !important; }
        .text-capitalize { text-transform: capitalize !important; }
    }

    // Weight and italics
    @if $enable-utility-text-weight {
        @each $size, $dim in $font-weights {
            .font-weight-#{$size} { font-weight: #{$dim} !important; }
        }
    }
    @if $enable-utility-text-style {
        .font-italic         { font-style: italic !important; }
        .font-normal         { font-style: normal !important; }
    }

    // Font families
    @if $enable-utility-text-family {
        .font-family-sans-serif { font-family: $font-family-sans-serif !important; }
        .font-family-serif      { font-family: $font-family-serif !important; }
        .font-family-monospace  { font-family: $font-family-monospace !important; }
    }

    // Truncated text
    @if $enable-utility-text-truncate {
        .text-truncate {
            @include text-truncate();
        }
    }

    // Text decoration
    @if $enable-utility-text-decoration {
        .text-decoration-none { text-decoration: none !important; }
        .text-decoration-underline { text-decoration: underline !important; }
        .text-decoration-line-through { text-decoration: line-through !important; }
    }

    // Word break
    @if $enable-utility-text-break {
        .text-break {
            word-break: break-word !important; // IE & < Edge 18
            overflow-wrap: break-word !important;
        }
    }

    // Contextual colors
    @if $enable-utility-text-colors {
        @if (type-of($utility-text-colors) == "map" and length($utility-text-colors) != 0) {
            @each $theme, $color in $utility-text-colors {
                @include text-emphasis-variant(".text-#{$theme}", $color, $level-delta-hover-color);
            }
        }
    }

    // Palette colors
    @if $enable-palette and $enable-utility-text-palette {
        $palette-colors-text: $palette-colors !default;
        $palette-levels-text: $palette-levels !default;

        @each $theme, $color in $palette-colors-text {
            @each $level in $palette-levels-text {
                @include text-emphasis-palette-variant(".text-#{$theme}-#{$level}", $color, $level, $level-delta-hover-color);
            }
        }
    }

    // Special text colors
    @if $enable-utility-text-special {
        .text-body { color: $body-color !important; }
        .text-muted { color: $text-muted !important; }
        .text-white { color: $white !important; }
        .text-black { color: $black !important; }
    }

    // Reset text color
    @if $enable-utility-text-reset {
        .text-reset { color: inherit !important; }
    }

    // Line heights
    @if $enable-utility-text-height {
        @each $size, $dim in $line-heights {
            .lh-#{$size} { line-height: #{$dim} !important; }
        }
    }

    // Font sizes
    @if $enable-utility-text-size {
        @each $breakpoint in $utility-text-size-breakpoints {
            $bprule: breakpoint-designator($breakpoint);

            @include media-breakpoint-up($breakpoint) {
                @each $size, $dim in $font-sizes {
                    .fs#{$bprule}-#{$size} { @include font-size(#{$dim}, true); }
                }
            }
        }
    }
}
