// scss-lint:disable ImportantRule

// Width
.width-100 {
    width: 100% !important;
}

// Height
.height-100 {
    height: 100% !important;
}

// Margin and Padding
.margin-x-auto {
    margin-right: auto !important;
    margin-left:  auto !important;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    $bprule: breakpoint-designator($breakpoint);

    @include media-breakpoint-up($breakpoint) {
        @each $prop, $abbrev in (margin: margin, padding: padding) {
            @each $size, $lengths in $spacers {
                $length-x:   map-get($lengths, x);
                $length-y:   map-get($lengths, y);

                .#{$abbrev}#{$bprule}-a-#{$size} { #{$prop}:        $length-y $length-x !important; } // a = All sides
                .#{$abbrev}#{$bprule}-t-#{$size} { #{$prop}-top:    $length-y !important; }
                .#{$abbrev}#{$bprule}-r-#{$size} { #{$prop}-right:  $length-x !important; }
                .#{$abbrev}#{$bprule}-b-#{$size} { #{$prop}-bottom: $length-y !important; }
                .#{$abbrev}#{$bprule}-l-#{$size} { #{$prop}-left:   $length-x !important; }

                // Axes
                .#{$abbrev}#{$bprule}-x-#{$size} {
                    #{$prop}-right:  $length-x !important;
                    #{$prop}-left:   $length-x !important;
                }
                .#{$abbrev}#{$bprule}-y-#{$size} {
                    #{$prop}-top:    $length-y !important;
                    #{$prop}-bottom: $length-y !important;
                }
            }
        }
    }
}

// Positioning
.position-f-t {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: $zindex-navbar-fixed;
}
