@use "sass:list";
@use "sass:meta";
@use "../functions/color-util";
@use "../settings";
@use "../settings-colors";
@use "../settings-options";

// stylelint-disable declaration-no-important

@if settings-options.$enable-utility-bg {
    // Contextual backgrounds
    @if settings-options.$enable-utility-bg-colors {
        @if (meta.type-of(settings.$utility-bg-colors) == "map" and list.length(settings.$utility-bg-colors) != 0) {
            @each $theme, $color in settings.$utility-bg-colors {
                .bg-#{$theme} {
                    background-color: $color !important;
                }
            }
        }
    }

    // Palette colors
    @if settings-options.$enable-palette and settings-options.$enable-utility-bg-palette {
        $palette-colors-bg: settings.$palette-colors !default;
        $palette-levels-bg: settings-colors.$palette-levels !default;

        @each $theme, $color in $palette-colors-bg {
            @each $level in $palette-levels-bg {
                .bg-#{$theme}-#{$level} {
                    background-color: color-util.palette($color, $level) !important;
                }
            }
        }
    }

    // Special background colors
    @if settings-options.$enable-utility-bg-special {
        .bg-body { background-color: settings.$body-bg !important; }
        .bg-white { background-color: settings.$white !important; }
        .bg-black { background-color: settings.$black !important; }
        .bg-transparent { background-color: transparent !important; }
    }

    // Background colors with contrasting text
    @if settings-options.$enable-utility-bgtext {
        @each $color, $value in settings.$utility-bgtext-colors {
            .bgtext-#{$color} {
                color: color-util.color-contrast($value) !important;
                background-color: $value !important;
            }
        }
    }
}
