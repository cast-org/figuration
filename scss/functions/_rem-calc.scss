// stylelint-disable length-zero-no-unit

@use "sass:list";
@use "sass:math";
@use "sass:meta";
@use "../functions/calc-util";

// Remove the unit from a value, returning number only.
// From: https://css-tricks.com/snippets/sass/strip-unit-function/
// @param {Number} $number - Number to remove unit from
// @return {Number} - Unitless number
@function strip-unit($number) {
  @if meta.type-of($number) == "number" and not unitless($number) {
    @return math.div($number, $number * 0 + 1);
  }

  @return $number;
}

// Converts any value to matching rem value.
// *Any* value passed, regardless of unit, is assumed to be a pixel value.
// @param {Number} $value - Pixel value to convert.
// @returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
@function any-to-rem($value) {
  // Check if the value is a number
  @if meta.type-of($value) != "number" {
    @warn inspect($value) + " was passed to rem(), which is not a number.";
    @return $value;
  }

  // Convert em into rem
  @if unit($value) == "em" {
    $value: strip-unit($value) * 1rem;
  }

  // Calculate rem if units for $value is not rem or em
  // Using 16px = 100% font size common in most browsers
  @if unit($value) != "rem" {
    $value: calc-util.calc-divide(strip-unit($value), strip-unit(16px)) * 1rem;
  }

  // Turn 0rem into 0
  @if $value == 0rem {
    $value: 0;
  }

  @return $value;
}

// Converts one or more values into matching rem values.
// @param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.
// @returns {List} A list of converted values.
@function rem($values) {
  $rem-values: ();
  $count: list.length($values);

  @if $count == 1 {
    @return any-to-rem($values);
  }

  @for $i from 1 through $count {
    $rem-values: list.append($rem-values, any-to-rem(list.nth($values, $i)));
  }

  @return $rem-values;
}

// Converts a unitless, pixel, or rem value to em, for use in breakpoints.
@function bp-to-em($value) {
  // Pixel and unitless values are converted to rem
  @if unit($value) == "px" or unitless($value) {
    $value: rem($value);
  }

  // Convert to em
  @return strip-unit($value) * 1em;
}
