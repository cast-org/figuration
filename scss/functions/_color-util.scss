// Generate palette colors
// Valid levels 0-1000
// Darker levels (>500) get narrower step interval than light
@function palette($color: $uibase, $level: 500) {
    $base: 500;
    $light-interval: .2%;
    $dark-interval: .15%;

    $level-delta: $level - $base;

    @if $level >= 0 and $level < $base {
        // lighten - flip negative value
        @return mix(#fff, $color, $level-delta * $light-interval * -1);
    } @else if $level > $base and $level <= 1000 {
        // darken
        @return mix(#000, $color, $level-delta * $dark-interval);
    } @else {
        // level==500 or out of range
        @return $color;
    }
}

@function palette-context($key: "primary", $level: 500) {
    $color: map-get($context-colors, $key);
    @return palette($color, $level);
}

@function palette-context-nohash($key: "primary", $level: 500) {
    $color: map-get($context-colors, $key);
    $hash: unquote(palette($color, $level) + "");
    $nohash: str-replace($hash, unquote("#"), "%23");
    @return $nohash;
}

// Generate contextual color theme
@function _mix-context-colors($map) {
    $result:            ();

    @each $theme, $color in $map {
        // Color adjustments
        $control-color:         $white;
        $control-bg:            $color;
        $control-border:        palette($color, $level-control-border);
        $control-hover-color:   $white;
        $control-hover-bg:      palette($color, $level-control-hover-bg);
        $control-hover-border:  palette($color, $level-control-hover-border);
        $context-color:         palette($color, $level-context-color);
        $context-bg:            palette($color, $level-context-bg);
        $context-border:        palette($color, $level-context-border);
        $context-hover-color:   palette($color, $level-context-hover-color);
        $context-hover-bg:      palette($color, $level-context-hover-bg);


        // Build new map
        $new-map: (
            "control-color": $control-color,
            "control-bg": $control-bg,
            "control-border": $control-border,
            "control-hover-color": $control-hover-color,
            "control-hover-bg": $control-hover-bg,
            "control-hover-border": $control-hover-border,
            "context-color": $context-color,
            "context-bg": $context-bg,
            "context-border": $context-border,
            "context-hover-color": $context-hover-color,
            "context-hover-bg": $context-hover-bg
        );
        // Merge into theme map
        $result: map-merge($result, ($theme: $new-map));
    }

    @return $result;
}
