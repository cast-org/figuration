{"version":3,"sources":["..\\..\\scss\\core\\_root.scss","..\\..\\scss\\vendor\\_rfs.scss","..\\..\\scss\\core\\_reboot.scss","dist\\css\\custom.css","..\\..\\scss\\mixins\\_border.scss","..\\..\\scss\\core\\_typography.scss","..\\..\\scss\\mixins\\_lists.scss","..\\..\\scss\\core\\_images.scss","..\\..\\scss\\mixins\\_images.scss","..\\..\\scss\\custom.scss"],"names":[],"mappings":"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","sourcesContent":["@use \"sass:meta\";\n@use \"../settings\" as *;\n@use \"../vendor/rfs\" as *;\n\n:root {\n  // @if $enable-root-colors {\n  //   @each $color, $value in $root-colors {\n  //     color-#{$prefix}color}: #{$prefix}value};\n  //   }\n  // }\n\n  // @if $enable-root-breakpoints {\n  //   @each $bp, $value in $grid-breakpoints {\n  //     --breakpoint-#{$prefix}bp}: #{$prefix}value};\n  //   }\n  // }\n\n  // Use `inspect` for lists so that quoted items keep the quotes.\n  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172\n  --#{$prefix}font-family-sans-serif: #{meta.inspect($font-family-sans-serif)};\n  --#{$prefix}font-family-serif: #{meta.inspect($font-family-serif)};\n  --#{$prefix}font-family-monospace: #{meta.inspect($font-family-monospace)};\n\n  // Root and body\n  @if $font-size-root != null {\n    --#{$prefix}root-font-size: #{$font-size-root};\n  }\n  --#{$prefix}body-font-family: #{meta.inspect($font-family-base)};\n  @include rfs($font-size-base, --#{$prefix}body-font-size);\n  --#{$prefix}body-font-weight: #{$font-weight-base};\n  --#{$prefix}body-line-height: #{$line-height-base};\n  @if $body-text-align != null {\n    --#{$prefix}body-text-align: #{$body-text-align};\n  }\n\n  --#{$prefix}body-color: #{$body-color};\n  --#{$prefix}body-color-rgb: #{to-rgb($body-color)};\n  --#{$prefix}body-bg: #{$body-bg};\n  --#{$prefix}body-bg-rgb: #{to-rgb($body-bg)};\n\n  --#{$prefix}heading-color: #{$headings-color};\n\n  --#{$prefix}link-color: #{$link-color};\n  --#{$prefix}link-color-rgb: #{to-rgb($link-color)};\n  --#{$prefix}link-decoration: #{$link-decoration};\n  --#{$prefix}link-hover-color: #{$link-hover-color};\n  --#{$prefix}link-hover-color-rgb: #{to-rgb($link-hover-color)};\n\n  @if $link-hover-decoration != null {\n    --#{$prefix}link-hover-decoration: #{$link-hover-decoration};\n  }\n\n  --#{$prefix}code-color: #{$code-color};\n  --#{$prefix}highlight-color: #{$mark-color};\n  --#{$prefix}highlight-bg: #{$mark-bg};\n}\n","// stylelint-disable scss/dimension-no-non-numeric-values\n\n// Based on SCSS RFS mixin\n// Automated responsive values for font sizes, paddings, margins and much more\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n@use \"sass:map\";\n@use \"sass:math\";\n@use \"sass:meta\";\n@use \"../settings\" as *;\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if ($responsive-font-size-minimum-size) {\n  $rfs-base-value: $responsive-font-size-minimum-size;\n}\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n@if ($responsive-font-size-fluid-breakpoint) {\n  $rfs-breakpoint: $responsive-font-size-fluid-breakpoint;\n  $rfs-breakpoint-unit: math.unit($rfs-breakpoint);\n}\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n@if ($responsive-font-size-fluid-two-dimensional) {\n  $rfs-two-dimensional: $responsive-font-size-fluid-two-dimensional;\n}\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n@if ($responsive-font-size-fluid-factor) {\n  $rfs-factor: $responsive-font-size-fluid-factor;\n}\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n@if ($enable-rfs-main) {\n  $enable-rfs: $enable-rfs-main;\n}\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: math.unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: math.abs($dividend);\n  $divisor: math.abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: math.unit($dividend);\n  $divisor-unit: math.unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map.get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: math.unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query () {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query () {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(meta.type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(meta.type-of($value) == \"number\", math.unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + \" \" + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      } @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + \" \" + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(meta.type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    } @else {\n      // Cache $value unit\n      $unit: if(meta.type-of($value) == \"number\", math.unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + \" \" + $value;\n      } @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(math.abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: math.abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + \" calc(\" + $min-width + if($value < 0, \" - \", \" + \") + $variable-width + \")\";\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluid-val: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluid-val {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluid-val);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $fluid-val, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n","// stylelint-disable declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix\n\n// Reboot\n// =====\n// Normalization of HTML elements, manually forked from Normalize.css and\n// Bootstrap's Reboot to remove styles targeting irrelevant browsers while\n// applying new styles.\n\n// Normalize is licensed MIT. https://github.com/necolas/normalize.css\n// Bootstrap is licensed MIT. https://github.com/twbs/bootstrap\n\n@use \"../settings\" as *;\n@use \"../settings-options\" as *;\n@use \"../mixins\" as *;\n@use \"../vendor/rfs\" as *;\n\n\n// Document\n// =====\n// Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n// Root\n// =====\n// Set the value of the root font size, affecting the value of `rem`.\n// null by default - so nothing will be generated.\n:root {\n  @if $font-size-root != null {\n    @include rfs(var(--#{$prefix}root-font-size));\n  }\n\n  @if $enable-smooth-scroll {\n    @media (prefers-reduced-motion: no-preference) {\n      scroll-behavior: smooth;\n    }\n  }\n}\n\n// Body\n// =====\n// 1. Remove the margin in all browsers.\n// 2. As a best practice, apply a default `background-color`.\n// 3. Prevent adjustments of font size after orientation changes in iOS.\n// 4. Change the default tap highlight to be completely transparent in iOS.\nbody{\n  margin: 0; // 1\n  font-family: var(--#{$prefix}body-font-family);\n  @include font-size(var(--#{$prefix}body-font-size));\n  font-weight: var(--#{$prefix}body-font-weight);\n  line-height: var(--#{$prefix}body-line-height);\n  color: var(--#{$prefix}body-color);\n  text-align: var(--#{$prefix}body-text-align);\n  background-color: var(--#{$prefix}body-bg); // 2\n  -webkit-text-size-adjust: 100%; // 3\n  -webkit-tap-highlight-color: rgba($black, 0); // 4\n}\n\n// Content grouping\n// =====\nhr {\n  margin: $hr-margin-y 0;\n  color: $hr-color; // Reset Firefox's gray color\n  border: 0;\n  border-top: $hr-border-width solid $hr-border-color;\n  opacity: $hr-opacity;\n}\n\n// Typography\n// =====\n// Remove top margins from headings\n// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top\n// margin for easier control within type scales as it avoids margin collapsing.\n%heading {\n  margin-top: 0;\n  margin-bottom: $headings-margin-bottom;\n  font-family: $headings-font-family;\n  font-style: $headings-font-style;\n  font-weight: $headings-font-weight;\n  line-height: $headings-line-height;\n  color: $headings-color;\n}\n\nh1 {\n  @extend %heading;\n  @include font-size($h1-font-size);\n}\n\nh2 {\n  @extend %heading;\n  @include font-size($h2-font-size);\n}\n\nh3 {\n  @extend %heading;\n  @include font-size($h3-font-size);\n}\n\nh4 {\n  @extend %heading;\n  @include font-size($h4-font-size);\n}\n\nh5 {\n  @extend %heading;\n  @include font-size($h5-font-size);\n}\n\nh6 {\n  @extend %heading;\n  @include font-size($h6-font-size);\n}\n\n// Paragraphs\n// =====\n// Reset margins on paragraphs\n// Similarly, the top margin on `<p>`s get reset. However, we also reset the\n// bottom margin to use `rem` units instead of `em`.\np {\n  margin-top: 0;\n  margin-bottom: $paragraph-spacer-y;\n}\n\n// Abbreviations\n// =====\n// 1. Duplicate behavior to the data-* attribute for our tooltip and popover widgets.\n// 2. Add the correct text decoration in Chrome, Edge, Opera, and Safari.\n// 3. Add explicit cursor to indicate changed behavior.\n// 4. Prevent the text-decoration to be skipped.\nabbr[title],\nabbr[data-cfw-tooltip-original-title],  // 1\nabbr[data-cfw-popover-original-title] { // 1\n  text-decoration: underline dotted; // 2\n  cursor: help; // 3\n  text-decoration-skip-ink: none; // 4\n}\n\n// Address\n// =====\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\n// Lists\n// =====\nol,\nul {\n  padding-left: 2rem;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: $dt-font-weight;\n}\n\n// 1. Undo browser default\ndd {\n  margin-bottom: .5rem;\n  margin-left: 0;  // 1\n}\n\n// Blockquote\n// =====\nblockquote {\n  margin: 0 0 1rem;\n}\n\n// Strong\n// =====\n// Add the correct font weight in Chrome, Edge, and Safari\nb,\nstrong {\n  font-weight: $font-weight-bolder;\n}\n\n// Small\n// =====\n// Add the correct font size in all browsers\nsmall {\n  @include font-size($small-font-size);\n}\n\n// Mark/highlight\n// =====\nmark {\n  padding: $mark-padding;\n  color: var(--#{$prefix}highlight-color);\n  background-color: var(--#{$prefix}highlight-bg);\n}\n\n// Sub and sup\n// =====\n// Prevent `sub` and `sup` elements from affecting the line height in\n// all browsers.\nsub,\nsup {\n  position: relative;\n  @include font-size($sub-sup-font-size);\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -.25em;\n}\n\nsup {\n  top: -.5em;\n}\n\n// Links\n// =====\na {\n  color: rgba(var(--#{$prefix}link-color-rgb), var(--#{$prefix}link-opacity, 1));\n  text-decoration: $link-decoration;\n\n  &:hover {\n    --#{$prefix}link-color-rgb: var(--#{$prefix}link-hover-color-rgb);\n    text-decoration: $link-hover-decoration;\n  }\n}\n\n// Undo these styles for placeholder links/named anchors (without href).\n// It would be more straightforward to just use a[href] in previous block, but that\n// causes specificity issues in many other styles that are too complex to fix.\na:not([href]):not([class]) {\n  color: inherit;\n  text-decoration: none;\n\n  &,\n  &:hover {\n    color: inherit;\n    text-decoration: none;\n  }\n}\n\n// Code\n// =====\n@if $enable-code {\n  pre,\n  code,\n  kbd,\n  samp {\n    font-family: $font-family-code;\n    @include font-size(1em); // Correct the odd `em` font sizing in all browsers.\n  }\n\n  // Blocks of code\n  @if $enable-code-pre {\n    // 1. Remove browser default top margin\n    // 2. Reset browser default of `1em` to use `rem`s\n    // 3. Don't allow content to break outside\n    pre {\n      margin-top: 0; // 1\n      margin-bottom: 1rem; // 2\n      overflow: auto; // 3\n      @include font-size($code-font-size);\n      color: $pre-color;\n\n      // Account for some code outputs that place code tags in pre tags\n      code {\n        @include font-size(inherit);\n        color: inherit;\n        word-break: normal;\n      }\n    }\n  }\n\n  // Inline code\n  @if $enable-code-code {\n    code {\n      @include font-size($code-font-size);\n      color: var(--#{$prefix}code-color);\n      word-wrap: break-word;\n\n      // Streamline the style when inside anchors to avoid broken underline and more\n      a > & {\n        color: inherit;\n      }\n    }\n  }\n\n  // User input typically entered via keyboard\n  @if $enable-code-kbd {\n    kbd {\n      padding: $kbd-padding-y $kbd-padding-x;\n      @include font-size($kbd-font-size);\n      color: $kbd-color;\n      background-color: $kbd-bg;\n      @include border-radius($kbd-border-radius);\n\n      kbd {\n        padding: 0;\n        @include font-size(1em);\n      }\n    }\n  }\n}\n\n// Figures\n// =====\nfigure {\n  margin: 0 0 1rem; // Apply a consistent margin strategy (matches our type styles).\n}\n\n// Images\n// =====\nimg,\nsvg {\n  vertical-align: middle;\n}\n\n// Tables\n// =====\ntable {\n  caption-side: bottom;\n  border-collapse: collapse; // Prevent double borders\n}\n\ncaption {\n  padding-top: $table-cell-padding;\n  padding-bottom: $table-cell-padding;\n  color: $table-caption-color;\n  text-align: left;\n}\n\n\n// 1. Removes font-weight bold by inheriting\n// 2. Matches default `<td>` alignment by inheriting `text-align`.\n// 3. Fix alignment for Safari\nth {\n  font-weight: $table-th-font-weight; // 1\n  text-align: inherit; // 2\n  text-align: -webkit-match-parent; // 3\n}\n\n// Allow border color to inherit all the way down.\n// Only need `border-*-width` later to turn border on/off.\nthead,\ntbody,\ntfoot,\ntr,\nth,\ntd {\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n}\n\n// Forms\n// =====\nlabel {\n  display: inline-block;\n  margin-bottom: $label-margin-bottom; // Allow labels to use `margin` for spacing.\n}\n\n// Remove the default `border-radius` that macOS Chrome adds.\n// Details at https://github.com/twbs/bootstrap/issues/24093\nbutton {\n  // stylelint-disable-next-line property-disallowed-list\n  border-radius: 0;\n}\n\n// Explicitly remove focus outline in Chromium when it shouldn't be\n// visible (e.g. as result of mouse click or touch tap). Browser\n// should be doing this automatically, but seems to sometimes be\n// confused and applies its very visible two-tone outline anyway.\nbutton:focus:not(:focus-visible) {\n  outline: 0;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0; // Remove the margin in Firefox and Safari\n  font-family: inherit;\n  @include font-size(inherit);\n  line-height: inherit;\n}\n\nbutton,\nselect {\n  text-transform: none; // Remove the inheritance of text transform in Firefox\n}\n\n// Set the cursor for non-`<button>` buttons\n[role=\"button\"] {\n  cursor: pointer;\n}\n\nselect {\n  // Remove the inheritance of word-wrap in Safari.\n  // Details at https://github.com/twbs/bootstrap/issues/24990\n  word-wrap: normal;\n\n  // Reset Chrome's opacity change\n  &:disabled {\n    opacity: 1;\n  }\n}\n\n// Remove the dropdown arrow only from text type inputs built with datalists in Chrome.\n// See https://stackoverflow.com/a/54997118\n[list]:not([type=\"date\"]):not([type=\"datetime-local\"]):not([type=\"month\"]):not([type=\"week\"]):not([type=\"time\"])::-webkit-calendar-picker-indicator {\n  display: none !important;\n}\n\n// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n//    controls in Android 4.\n// 2. Correct the inability to style clickable types in iOS and Safari.\n// 3. Opinionated: add \"hand\" cursor to non-disabled button elements.\nbutton,\n[type=\"button\"], // 1\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; // 2\n\n  &:not(:disabled) {\n    cursor: pointer; // 3\n  }\n}\n\n// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.\n::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\n// Opinionated normalize of dimensions across browsers\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  width: $input-checkradio-size;\n  height: $input-checkradio-size;\n}\n\n// Textareas should really only resize vertically so they don't break their (horizontal) containers.\ntextarea {\n  resize: vertical;\n}\n\n// 1. Browsers set a default `min-width: min-content;` on fieldsets,\n//    unlike e.g. `<div>`s, which have `min-width: 0;` by default.\n//    So we reset that to ensure fieldsets behave more like a standard block element.\n//    See https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements\n// 2. Reset the default outline behavior of fieldsets so they don't affect page layout.\nfieldset {\n  min-width: 0; // 1\n  padding: 0; // 2\n  margin: 0; // 2\n  border: 0; // 2\n}\n\n// 1. By using `float: left`, the legend will behave like a block element.\n//    This way the border of a fieldset wraps around the legend if present.\n// 2. Fix wrapping issue.\nlegend {\n  float: left; // 1\n  width: 100%;\n  padding: 0;\n  margin-bottom: $legend-margin-bottom;\n  @include font-size($legend-font-size);\n  font-weight: $legend-font-weight;\n  line-height: inherit;\n\n  + * {\n    clear: left; // 2\n  }\n}\n\n// Add the correct vertical alignment in Chrome, Firefox, and Opera.\nprogress {\n  vertical-align: baseline;\n}\n\n// Fix height of inputs with a type of datetime-local, date, month, week, or time\n::-webkit-datetime-edit-fields-wrapper,\n::-webkit-datetime-edit-text,\n::-webkit-datetime-edit-minute,\n::-webkit-datetime-edit-hour-field,\n::-webkit-datetime-edit-day-field,\n::-webkit-datetime-edit-month-field,\n::-webkit-datetime-edit-year-field {\n  padding: 0;\n}\n\n::-webkit-inner-spin-button {\n  height: auto;\n}\n\n// 1. This overrides the extra rounded corners on search inputs in iOS so that our\n//    `.form-control` class can properly style them. Note that this cannot simply\n//    be added to `.form-control` as it's not specific enough. For details, see\n// 2. Correct the outline style in Safari.\n[type=\"search\"] {\n  -webkit-appearance: textfield; // 1\n  outline-offset: -2px; // 2\n}\n\n// Remove the inner padding in Chrome and Safari on macOS.\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n// 1. Change font properties to `inherit` in Safari.\n// 2. Correct the inability to style clickable types in iOS and Safari.\n::file-selector-button {\n  font: inherit; // 1\n  -webkit-appearance: button; // 2\n}\n\n// Correct element displays\noutput {\n  display: inline-block;\n}\n\n// Remove border from iframe\niframe {\n  border: 0;\n}\n\nsummary {\n  display: list-item; // Add the correct display in all browsers\n  cursor: pointer;\n}\n\n// Always hide an element with the `hidden` HTML attribute (from PureCSS).\n[hidden] {\n  display: none !important;\n}\n","@charset \"UTF-8\";\n:root {\n  --cf-font-family-sans-serif: system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Noto Sans\", \"Liberation Sans\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  --cf-font-family-serif: \"Iowan Old Style\", \"Apple Garamond\", Baskerville, \"Times New Roman\", \"Droid Serif\", Times, \"Source Serif Pro\", serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  --cf-font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  --cf-root-font-size: 2rem;\n  --cf-body-font-family: var(--cf-font-sans-serif);\n  --cf-body-font-size: 1rem;\n  --cf-body-font-weight: 400;\n  --cf-body-line-height: 1.5;\n  --cf-body-color: #13171a;\n  --cf-body-color-rgb: to-rgb(#13171a);\n  --cf-body-bg: #fff;\n  --cf-body-bg-rgb: to-rgb(#fff);\n  --cf-heading-color: ;\n  --cf-link-color: #0055e9;\n  --cf-link-color-rgb: to-rgb(#0055e9);\n  --cf-link-decoration: underline;\n  --cf-link-hover-color: #00338c;\n  --cf-link-hover-color-rgb: to-rgb(#00338c);\n  --cf-code-color: #bf2012;\n  --cf-highlight-color: #13171a;\n  --cf-highlight-bg: #ff0;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n:root {\n  font-size: var(--cf-root-font-size);\n}\n@media (prefers-reduced-motion: no-preference) {\n  :root {\n    scroll-behavior: smooth;\n  }\n}\n\nbody {\n  margin: 0;\n  font-family: var(--cf-body-font-family);\n  font-size: var(--cf-body-font-size);\n  font-weight: var(--cf-body-font-weight);\n  line-height: var(--cf-body-line-height);\n  color: var(--cf-body-color);\n  text-align: var(--cf-body-text-align);\n  background-color: var(--cf-body-bg);\n  -webkit-text-size-adjust: 100%;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\nhr {\n  margin: 1rem 0;\n  color: inherit;\n  border: 0;\n  border-top: 3px solid;\n  opacity: 0.25;\n}\n\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  line-height: 1.25;\n}\n\nh1, .h1 {\n  font-size: calc(1.15rem + 1.8vw);\n}\n@media (min-width: 75em) {\n  h1, .h1 {\n    font-size: 2.5rem;\n  }\n}\n\nh2, .h2 {\n  font-size: calc(1.1rem + 1.2vw);\n}\n@media (min-width: 75em) {\n  h2, .h2 {\n    font-size: 2rem;\n  }\n}\n\nh3, .h3 {\n  font-size: calc(1.075rem + 0.9vw);\n}\n@media (min-width: 75em) {\n  h3, .h3 {\n    font-size: 1.75rem;\n  }\n}\n\nh4, .h4 {\n  font-size: calc(1.05rem + 0.6vw);\n}\n@media (min-width: 75em) {\n  h4, .h4 {\n    font-size: 1.5rem;\n  }\n}\n\nh5, .h5 {\n  font-size: calc(1.025rem + 0.3vw);\n}\n@media (min-width: 75em) {\n  h5, .h5 {\n    font-size: 1.25rem;\n  }\n}\n\nh6, .h6 {\n  font-size: 1rem;\n}\n\np {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nabbr[title],\nabbr[data-cfw-tooltip-original-title],\nabbr[data-cfw-popover-original-title] {\n  -webkit-text-decoration: underline dotted;\n  text-decoration: underline dotted;\n  cursor: help;\n  -webkit-text-decoration-skip-ink: none;\n  text-decoration-skip-ink: none;\n}\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\nol,\nul {\n  padding-left: 2rem;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: 700;\n}\n\ndd {\n  margin-bottom: 0.5rem;\n  margin-left: 0;\n}\n\nblockquote {\n  margin: 0 0 1rem;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\nsmall, .small {\n  font-size: 0.875em;\n}\n\nmark, .mark {\n  padding: 0.125em 0.25em;\n  color: var(--cf-highlight-color);\n  background-color: var(--cf-highlight-bg);\n}\n\nsub,\nsup {\n  position: relative;\n  font-size: 0.75em;\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\na {\n  color: rgba(var(--cf-link-color-rgb), var(--cf-link-opacity, 1));\n  text-decoration: underline;\n}\na:hover {\n  --cf-link-color-rgb: var(--cf-link-hover-color-rgb);\n}\n\na:not([href]):not([class]) {\n  color: inherit;\n  text-decoration: none;\n}\na:not([href]):not([class]), a:not([href]):not([class]):hover {\n  color: inherit;\n  text-decoration: none;\n}\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: var(--cf-font-monospace);\n  font-size: 1em;\n}\n\npre {\n  margin-top: 0;\n  margin-bottom: 1rem;\n  overflow: auto;\n  font-size: 0.875em;\n}\npre code {\n  font-size: inherit;\n  color: inherit;\n  word-break: normal;\n}\n\ncode {\n  font-size: 0.875em;\n  color: var(--cf-code-color);\n  word-wrap: break-word;\n}\na > code {\n  color: inherit;\n}\n\nkbd {\n  padding: 0.125rem 0.375rem;\n  font-size: 0.875em;\n  color: #eff1f3;\n  background-color: #13171a;\n  border-radius: 0.1875rem;\n}\nkbd kbd {\n  padding: 0;\n  font-size: 1em;\n}\n\nfigure {\n  margin: 0 0 1rem;\n}\n\nimg,\nsvg {\n  vertical-align: middle;\n}\n\ntable {\n  caption-side: bottom;\n  border-collapse: collapse;\n}\n\ncaption {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  color: #5e7182;\n  text-align: left;\n}\n\nth {\n  text-align: inherit;\n  text-align: -webkit-match-parent;\n}\n\nthead,\ntbody,\ntfoot,\ntr,\nth,\ntd {\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n}\n\nlabel {\n  display: inline-block;\n  margin-bottom: 0.5rem;\n}\n\nbutton {\n  border-radius: 0;\n}\n\nbutton:focus:not(:focus-visible) {\n  outline: 0;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n[role=button] {\n  cursor: pointer;\n}\n\nselect {\n  word-wrap: normal;\n}\nselect:disabled {\n  opacity: 1;\n}\n\n[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {\n  display: none !important;\n}\n\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\nbutton:not(:disabled),\n[type=button]:not(:disabled),\n[type=reset]:not(:disabled),\n[type=submit]:not(:disabled) {\n  cursor: pointer;\n}\n\n::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\ninput[type=radio],\ninput[type=checkbox] {\n  width: 0.875rem;\n  height: 0.875rem;\n}\n\ntextarea {\n  resize: vertical;\n}\n\nfieldset {\n  min-width: 0;\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n\nlegend {\n  float: left;\n  width: 100%;\n  padding: 0;\n  margin-bottom: 0.5rem;\n  font-size: calc(1.05rem + 0.6vw);\n  line-height: inherit;\n}\n@media (min-width: 75em) {\n  legend {\n    font-size: 1.5rem;\n  }\n}\nlegend + * {\n  clear: left;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\n::-webkit-datetime-edit-fields-wrapper,\n::-webkit-datetime-edit-text,\n::-webkit-datetime-edit-minute,\n::-webkit-datetime-edit-hour-field,\n::-webkit-datetime-edit-day-field,\n::-webkit-datetime-edit-month-field,\n::-webkit-datetime-edit-year-field {\n  padding: 0;\n}\n\n::-webkit-inner-spin-button {\n  height: auto;\n}\n\n[type=search] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::file-selector-button {\n  font: inherit;\n  -webkit-appearance: button;\n}\n\noutput {\n  display: inline-block;\n}\n\niframe {\n  border: 0;\n}\n\nsummary {\n  display: list-item;\n  cursor: pointer;\n}\n\n[hidden] {\n  display: none !important;\n}\n\n.lead {\n  font-size: calc(1.025rem + 0.3vw);\n  font-weight: 600;\n  line-height: 1.5;\n}\n@media (min-width: 75em) {\n  .lead {\n    font-size: 1.25rem;\n  }\n}\n\n.list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n\n.initialism {\n  font-size: 0.875em;\n  text-transform: uppercase;\n}\n\n.blockquote {\n  margin: 0 0 1rem;\n  font-size: calc(1.025rem + 0.3vw);\n  color: #13171a;\n}\n@media (min-width: 75em) {\n  .blockquote {\n    font-size: 1.25rem;\n  }\n}\n.blockquote > :last-child {\n  margin-bottom: 0;\n}\n\n.blockquote-footer {\n  margin: -1rem 0 1rem;\n  font-size: 0.875rem;\n  color: #5e7182;\n}\n.blockquote-footer::before {\n  content: \"— \";\n}\n\n.img-fluid {\n  max-width: 100%;\n  height: auto;\n}\n\n.img-thumbnail {\n  padding: 0.25rem;\n  background-color: #fff;\n  border: 3px solid #9eaab4;\n  border-radius: 0.375rem;\n  max-width: 100%;\n  height: auto;\n}\n\n.figure {\n  display: inline-block;\n}\n\n.figure-img {\n  margin-bottom: 0.5rem;\n  line-height: 1;\n}\n\n.figure-caption {\n  font-size: 0.875em;\n  color: #5e7182;\n}\n\n.customfont {\n  font-size: calc(1.1rem + 1.2vw);\n}\n@media (min-width: 75em) {\n  .customfont {\n    font-size: 2rem;\n  }\n}\n\n.customcolor {\n  color: #ffcccc;\n  background: #eff1f3;\n}\n\n/*# sourceMappingURL=custom.css.map */","// stylelint-disable property-disallowed-list\n\n@use \"sass:list\";\n@use \"../settings\" as *;\n\n// Helper function to replace negative values with 0\n@function valid-radius($radius) {\n  $return: ();\n  @each $value in $radius {\n    @if type-of($value) == number {\n      $return: list.append($return, max($value, 0));\n    } @else {\n      $return: list.append($return, $value);\n    }\n  }\n  @return $return;\n}\n\n// All\n@mixin border-radius($radius: $border-radius, $fallback-radius: false) {\n  @if $enable-rounded {\n    border-radius: valid-radius($radius);\n  }\n  @else if $fallback-radius != false {\n    border-radius: $fallback-radius;\n  }\n}\n\n// Sides\n@mixin border-top-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n// Corners\n@mixin border-top-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n// Radius utility generators\n// Build classes to control by side\n@mixin radius-sides($radius: $radius-border-radius, $size: null) {\n  // Add the dash for rule naming\n  $sizerule: if($size, -#{$size}, \"\");\n\n  .radius#{$sizerule} {\n    border-radius: $radius;\n  }\n  .radius-t#{$sizerule} {\n    border-top-left-radius: $radius;\n    border-top-right-radius: $radius;\n  }\n  .radius-e#{$sizerule} {\n    border-top-right-radius: $radius;\n    border-bottom-right-radius: $radius;\n  }\n  .radius-b#{$sizerule} {\n    border-bottom-right-radius: $radius;\n    border-bottom-left-radius: $radius;\n  }\n  .radius-s#{$sizerule} {\n    border-top-left-radius: $radius;\n    border-bottom-left-radius: $radius;\n  }\n}\n\n// Build classes to control by corner\n@mixin radius-corners($radius: $radius-border-radius, $size: null) {\n  // Add the dash for rule naming\n  $sizerule: if($size, -#{$size}, \"\");\n\n  .radius-te#{$sizerule} {\n    border-top-right-radius: $radius;\n  }\n  .radius-ts#{$sizerule} {\n    border-top-left-radius: $radius;\n  }\n  .radius-be#{$sizerule} {\n    border-bottom-right-radius: $radius;\n  }\n  .radius-bs#{$sizerule} {\n    border-bottom-left-radius: $radius;\n  }\n}\n","@forward \"reboot\";\n@use \"../settings\" as *;\n@use \"../settings-options\" as *;\n@use \"../mixins\" as *;\n@use \"../vendor/rfs\" as *;\n\n@if $enable-typography {\n  // Headings\n  @if $enable-typography-headings {\n    .h1 {\n      @extend h1;\n    }\n\n    .h2 {\n      @extend h2;\n    }\n\n    .h3 {\n      @extend h3;\n    }\n\n    .h4 {\n      @extend h4;\n    }\n\n    .h5 {\n      @extend h5;\n    }\n\n    .h6 {\n      @extend h6;\n    }\n  }\n\n  // Lead in\n  @if $enable-typography-lead {\n    .lead {\n      @include font-size($lead-font-size);\n      font-weight: $lead-font-weight;\n      line-height: $lead-line-height;\n    }\n  }\n\n  // Emphasis\n  @if $enable-typography-small {\n    .small {\n      @extend small;\n    }\n  }\n\n  @if $enable-typography-mark {\n    .mark {\n      @extend mark;\n    }\n  }\n\n  // Lists\n  @if $enable-typography-list-unstyled {\n    .list-unstyled {\n      @include list-unstyled();\n    }\n  }\n\n  //  Abbr extension\n  @if $enable-typography-initialism {\n    .initialism {\n      @include font-size($initialism-font-size);\n      text-transform: uppercase;\n    }\n  }\n\n  // Blockquotes\n  @if $enable-typography-blockquote {\n    .blockquote {\n      margin: $blockquote-margin;\n      @include font-size($blockquote-font-size);\n      color: $blockquote-color;\n\n      > :last-child {\n        margin-bottom: 0;\n      }\n    }\n    .blockquote-footer {\n      margin: $blockquote-footer-margin;\n      @include font-size($blockquote-footer-font-size);\n      color: $blockquote-footer-color;\n\n      &::before {\n        content: $blockquote-footer-content;\n      }\n    }\n  }\n}\n","// Lists\n\n// Unstyled keeps list items block level, just removes default browser padding and list-style\n@mixin list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n\n// List context color\n@mixin list-item-variant($state, $bg, $color, $border, $hover-bg, $hover-color, $hover-border, $active-bg: $hover-bg, $active-color: $hover-color, $active-border: $hover-border) {\n  @if $enable-list-item-action {\n    .list-item-action.list-item-#{$state} {\n      @include hover-focus() {\n        color: $hover-color;\n        background-color: $hover-bg;\n        border-color: $hover-border;\n      }\n    }\n  }\n\n  .list-item-#{$state} {\n    color: $color;\n    background-color: $bg;\n    border-color: $border;\n\n    &.active {\n      color: $active-color;\n      background-color: $active-bg;\n      border-color: $active-border;\n    }\n  }\n}\n","@use \"../settings\" as *;\n@use \"../settings-options\" as *;\n@use \"../mixins\" as *;\n@use \"../vendor/rfs\" as *;\n\n@if $enable-img {\n  // Fluid images\n  // Keep images from scaling beyond the width of their parents.\n  @if $enable-img-fluid {\n    .img-fluid {\n      @include img-fluid();\n    }\n  }\n\n  // Image thumbnails\n  @if $enable-img-thumbnail {\n    .img-thumbnail {\n      padding: $thumbnail-padding;\n      background-color: $thumbnail-bg;\n      border: $thumbnail-border-width solid $thumbnail-border-color;\n      @include border-radius($thumbnail-border-radius);\n      @include box-shadow($thumbnail-box-shadow);\n\n      // Keep them at most 100% wide\n      @include img-fluid();\n    }\n  }\n}\n\n// Figures\n@if $enable-figure {\n  .figure {\n    // Ensures the caption's text aligns with the image.\n    display: inline-block;\n  }\n  .figure-img {\n    margin-bottom: $figure-spacer-y;\n    line-height: 1;\n  }\n  .figure-caption {\n    @include font-size($figure-caption-font-size);\n    color: $figure-caption-color;\n  }\n}\n","// Fluid image\n// Keep images from scaling beyond the width of their parents.\n@mixin img-fluid() {\n  // Set a maximum relative to the parent\n  max-width: 100%;\n  // Override the height to auto, otherwise images will be stretched\n  // when setting a width and height attribute on the img element.\n  height: auto;\n}\n","// Custom inclusion test\n\n@use \"figuration\" with (\n  $font-size-root: 2rem,\n  $border-width: 3px,\n);\n\n.customfont {\n  @include figuration.font-size(2rem);\n}\n\n.customcolor {\n  color: figuration.palette(red, 100);\n  background: figuration.$light;\n}\n"]}